var searchIndex = JSON.parse('{\
"connectorx":{"doc":"ConnectorX","t":"AAAAAAAAAOOAAAAAADILLLLLLKLLLLLLLKLKLLLLLLLRRRRRRRRRNENLLLLLFLLLLLLLLLLLLLLLLLLLLISIIQQQQQQKKAAKKKKKKLDENDCNNGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLDECNDNNNGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLENNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNENENNNNNNNNNNNNNNNNNNNNNNNGNNNNEGNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFDDLLLLMMMMLLLLLLLLLLLLMLLMLLFLLMLLLLLLLLLLFFFDLLLLLLFFLLLLFLLLLLLCCCCCCECCCCCCDCCCCNCCCCCCCCCCCCCCCCNLLLLLLLLLLCLLLLLLLLLLLLLLCCLLLLLLLLLLCLLCLLLLLLLLLLLLLLLLLNNNNNNNDELLLLLLLLLLMLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLMLLLLSQQQQQQIIIIQQQAAAKKAAKKKALKKAKKKKKKKANDNNNDEDDNENNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDEDDENNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDDDENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNNNNDNNNNDNNNNNDEDDENNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNNNNNNNNNNNNNNDNNDEDDENNNENNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNNNNDNNDEDDENNNNNNLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNNNNENNENNNNNNNNNNNNNNNNNNNNNDDNNDDDEDDEENNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNNNNDEDDENNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDEDEDNNNNNNNNNNNNNNNNNNNNNNNNDDDEDEDEDEDEDEDEDEDEDENNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLQQQQQIIKLKKK","n":["arrow_batch_iter","constants","data_order","destinations","errors","fed_dispatcher","fed_rewriter","get_arrow","get_arrow2","impl_transport","impl_typesystem","partition","prelude","source_router","sources","transports","typesystem","ArrowBatchIter","RecordBatchIterator","borrow","borrow_mut","deref","deref_mut","drop","from","get_schema","get_schema","init","into","into_iter","lift_into","new","next","next_batch","next_batch","prepare","prepare","sculpt","subset","try_from","try_into","type_id","vzip","CONNECTORX_PROTOCOL","CX_REWRITER_PATH","DB_BUFFER_SIZE","DUCKDB_JDBC_DRIVER","J4RS_BASE_PATH","MYSQL_JDBC_DRIVER","ORACLE_ARRAY_SIZE","POSTGRES_JDBC_DRIVER","RECORD_BATCH_SIZE","ColumnMajor","DataOrder","RowMajor","__clone_box","borrow","borrow_mut","clone","clone_into","coordinate","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","init","into","lift_into","sculpt","subset","to_owned","try_from","try_into","type_id","vzip","Consume","DATA_ORDERS","Destination","DestinationPartition","Error","Error","Error","Partition","TypeSystem","TypeSystem","allocate","aquire_row","arrow","arrow2","consume","finalize","ncols","needs_count","partition","schema","write","ArrowDestination","ArrowDestinationError","ArrowError","ArrowPartitionWriter","ArrowTypeSystem","ConnectorXError","Other","Result","allocate","aquire_row","arrow","arrow_schema","as_error_source","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","consume","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","empty_batch","finalize","fmt","fmt","from","from","from","from","from","from","init","init","init","into","into","into","lift_into","lift_into","lift_into","names","ncols","needs_count","new","new_with_batch_size","partition","provide","record_batch","schema","sculpt","sculpt","sculpt","source","subset","subset","subset","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","typesystem","vzip","vzip","vzip","Arrow2Destination","Arrow2DestinationError","Arrow2TypeSystem","ArrowError","ArrowPartitionWriter","ConnectorXError","Other","PolarsError","Result","allocate","aquire_row","arrow","as_error_source","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","consume","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","finalize","fmt","fmt","from","from","from","from","from","from","from","init","init","init","into","into","into","lift_into","lift_into","lift_into","ncols","needs_count","new","partition","polars","provide","schema","sculpt","sculpt","sculpt","source","subset","subset","subset","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","typesystem","vzip","vzip","vzip","Arrow2TypeSystem","BoolArray","Boolean","Date32","Date64","DateTimeTz","Float32","Float32Array","Float64","Float64Array","Int32","Int32Array","Int64","Int64Array","LargeBinary","LargeUtf8","Time64","UInt32","UInt32Array","UInt64","UInt64Array","Utf8Array","__clone_box","borrow","borrow_mut","clone","clone_into","cmp","compare","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","lift_into","partial_cmp","sculpt","subset","to_owned","try_from","try_into","type_id","vzip","ArrowTypeSystem","Boolean","Date32","Date64","DateTimeTz","Float32","Float64","Int32","Int64","LargeBinary","LargeUtf8","Time64","UInt32","UInt64","__clone_box","borrow","borrow_mut","clone","clone_into","cmp","compare","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","lift_into","partial_cmp","sculpt","subset","to_owned","try_from","try_into","type_id","vzip","Arrow2Error","ArrowError","BigQueryError","BigQuerySourceError","BigqueryArrow2TransportError","BigqueryArrowTransportError","CannotProduce","CannotResolveDataOrder","ConnectorXError","ConnectorXInternalError","ConnectorXOutError","Context","CountError","DataFusionError","FileNotFoundError","IOError","J4RSError","JsonError","MsSQL","MsSQLArrow2TransportError","MsSQLArrowTransportError","MsSQLSourceError","MySQLArrow2TransportError","MySQLArrowTransportError","MySQLSourceError","MysqlError","NoContext","NoConversionRule","OracleArrow2TransportError","OracleArrowTransportError","OracleError","OracleSourceError","Other","Other","OutResult","PostgresArrow2TransportError","PostgresArrowTransportError","PostgresError","PostgresSourceError","ProduceContext","Result","SQLParserError","SQLiteArrow2TransportError","SQLiteArrowTransportError","SQLiteError","SQLiteSourceError","SourceNotSupport","SqlQueryNotSupported","StdIOError","StdVarError","TypeCheckFailed","UnsupportedDataOrder","UrlParseError","as_error_source","as_error_source","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cannot_produce","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","into","into","into","lift_into","lift_into","lift_into","provide","provide","sculpt","sculpt","sculpt","source","source","subset","subset","subset","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","run","FederatedDataSourceInfo","Plan","borrow","borrow","borrow_mut","borrow_mut","cardinality","conn_str_info","db_alias","db_name","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","is_local","lift_into","lift_into","manual_info","new_from_conn_str","new_from_manual_schema","rewrite_sql","sculpt","sculpt","sql","subset","subset","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","get_arrow","new_record_batch_iter","get_arrow2","PartitionQuery","borrow","borrow_mut","deref","deref_mut","drop","from","get_col_range","get_part_query","init","into","lift_into","new","partition","sculpt","subset","try_from","try_into","type_id","vzip","Arrow2Destination","ArrowDestination","ArrowPartitionWriter","ArrowTypeSystem","BigQuerySource","CSVSource","CXQuery","ConnectorXError","ConnectorXOutError","Consume","DataOrder","Destination","DestinationPartition","Dispatcher","DummySource","FederatedDataSourceInfo","MsSQLSource","MySQLSource","Naked","OracleSource","ParameterizedFunc","ParameterizedOn","PartitionParser","Plan","PostgresSource","Produce","Realize","RecordBatchIterator","SQLiteSource","Source","SourcePartition","Transport","TypeAssoc","TypeConversion","TypeSystem","Wrapped","__clone_box","as_ref","as_statement","as_str","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","coordinate","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from","get_arrow","get_arrow2","get_meta","init","init","into","into","lift_into","lift_into","map","naked","new","new_record_batch_iter","prepare","result","rewrite_sql","run","run","sculpt","sculpt","subset","subset","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with","BigQuery","DuckDB","MsSQL","MySQL","Oracle","Postgres","SQLite","SourceConn","SourceType","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","conn","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","lift_into","lift_into","new","parse_source","proto","sculpt","sculpt","set_protocol","subset","subset","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","ty","type_id","type_id","vzip","vzip","DATA_ORDERS","Error","Error","Error","Error","Parser","Partition","PartitionParser","Produce","Source","SourcePartition","TypeSystem","TypeSystem","TypeSystem","bigquery","csv","dummy","fetch_metadata","fetch_next","mssql","mysql","names","ncols","nrows","oracle","parse","parser","partition","postgres","produce","result_rows","result_rows","schema","set_data_order","set_origin_query","set_queries","sqlite","BQError","BigQueryDialect","BigQueryJsonError","BigQueryParseFloatError","BigQueryParseIntError","BigQuerySource","BigQuerySourceError","BigQuerySourceParser","BigQuerySourcePartition","BigQueryStdError","BigQueryTypeSystem","BigQueryUrlError","Bignumeric","Bool","Boolean","Bytes","ConnectorXError","Date","Datetime","Float","Float64","Int64","Integer","Numeric","Other","String","Time","Timestamp","__clone_box","as_error_source","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","fetch_metadata","fetch_next","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","is_delimited_identifier_start","is_identifier_part","is_identifier_start","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","names","ncols","new","new","nrows","parser","partition","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","provide","result_rows","result_rows","schema","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","set_data_order","set_origin_query","set_queries","source","subset","subset","subset","subset","subset","subset","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Bool","CSVError","CSVSource","CSVSourceError","CSVSourcePartition","CSVSourcePartitionParser","CSVTypeSystem","ConnectorXError","DateTime","F64","I64","IOError","Other","RegexError","String","__clone_box","as_error_source","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","compare","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fetch_metadata","fetch_next","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_hash","hash","infer_schema","init","init","init","init","init","into","into","into","into","into","lift_into","lift_into","lift_into","lift_into","lift_into","names","ncols","new","new","nrows","parser","partial_cmp","partition","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","provide","result_rows","result_rows","schema","sculpt","sculpt","sculpt","sculpt","sculpt","set_data_order","set_origin_query","set_queries","source","subset","subset","subset","subset","subset","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Bool","DateTime","DummySource","DummySourcePartition","DummySourcePartitionParser","DummyTypeSystem","F64","I64","String","__clone_box","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","compare","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fetch_metadata","fetch_next","fmt","from","from","from","from","get_hash","hash","init","init","init","init","into","into","into","into","lift_into","lift_into","lift_into","lift_into","names","ncols","new","new","nrows","parser","partial_cmp","partition","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","result_rows","result_rows","schema","sculpt","sculpt","sculpt","sculpt","set_data_order","set_origin_query","set_queries","subset","subset","subset","subset","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Bigint","Binary","Bit","Char","ConnectorXError","Date","Datetime","Datetime2","Datetimeoffset","Decimal","Float24","Float53","FloatN","Floatn","GetNRowsFailed","Image","Int","IntN","Intn","Money","MsSQLError","MsSQLPoolError","MsSQLRuntimeError","MsSQLSource","MsSQLSourceError","MsSQLSourceParser","MsSQLSourcePartition","MsSQLTypeSystem","MsSQLUrlDecodeError","MsSQLUrlError","Nchar","Ntext","Numeric","Nvarchar","Other","SmallMoney","Smalldatetime","Smallint","Text","Time","Tinyint","Uniqueidentifier","Varbinary","Varchar","__clone_box","as_error_source","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fetch_metadata","fetch_next","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sql","from_sql","init","init","init","init","init","init","init","into","into","into","into","into","into","into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","mssql_config","names","ncols","new","new","nrows","parser","partition","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","provide","result_rows","result_rows","schema","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","set_data_order","set_origin_query","set_queries","source","subset","subset","subset","subset","subset","subset","subset","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BinaryProtocol","Blob","Char","ConnectorXError","Date","Datetime","Decimal","Double","Enum","Float","Int24","Json","Long","LongBlob","LongLong","MediumBlob","MySQLBinarySourceParser","MySQLError","MySQLPoolError","MySQLSource","MySQLSourceError","MySQLSourcePartition","MySQLTextSourceParser","MySQLTypeSystem","MySQLUrlError","Other","Short","TextProtocol","Time","Timestamp","Tiny","TinyBlob","UInt24","ULong","ULongLong","UShort","UTiny","VarChar","Year","__clone_box","as_error_source","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","fetch_metadata","fetch_next","fetch_next","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","names","ncols","ncols","new","new","new","new","nrows","nrows","parser","parser","partition","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","provide","result_rows","result_rows","result_rows","schema","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","set_data_order","set_origin_query","set_queries","source","subset","subset","subset","subset","subset","subset","subset","subset","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BinaryDouble","BinaryFloat","Blob","Char","Clob","ConnectorXError","Date","Float","NChar","NVarChar","NumFloat","NumInt","OracleDialect","OracleError","OraclePoolError","OracleSource","OracleSourceError","OracleSourcePartition","OracleTextSourceParser","OracleTypeSystem","OracleUrlDecodeError","OracleUrlError","Other","Timestamp","TimestampTz","VarChar","__clone_box","as_error_source","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","connect_oracle","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","fetch_metadata","fetch_next","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","is_identifier_part","is_identifier_start","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","names","ncols","new","new","new","nrows","parser","partition","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","provide","result_rows","result_rows","schema","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","set_data_order","set_origin_query","set_queries","source","subset","subset","subset","subset","subset","subset","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","BinaryProtocol","Bool","BoolArray","BpChar","ByteA","CSVError","CSVProtocol","Char","ConnectorXError","CursorProtocol","Date","Enum","Float4","Float4Array","Float8","Float8Array","HSTORE","HexError","IOError","Int2","Int2Array","Int4","Int4Array","Int8","Int8Array","JSON","JSONB","Name","Numeric","NumericArray","Other","PostgresBinarySourcePartitionParser","PostgresCSVSourceParser","PostgresError","PostgresPoolError","PostgresRawSourceParser","PostgresSimpleSourceParser","PostgresSource","PostgresSourceError","PostgresSourcePartition","PostgresTypePairs","PostgresTypeSystem","SimpleProtocol","Text","TextArray","Time","Timestamp","TimestampTz","TlsError","UUID","VarChar","VarcharArray","__clone_box","as_error_source","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fetch_metadata","fetch_next","fetch_next","fetch_next","fetch_next","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","names","ncols","ncols","ncols","ncols","new","new","new","new","new","new","nrows","nrows","nrows","nrows","parser","parser","parser","parser","partition","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","provide","result_rows","result_rows","result_rows","result_rows","result_rows","rewrite_tls_args","schema","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","set_data_order","set_origin_query","set_queries","source","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Blob","Bool","ConnectorXError","Date","InferTypeFromNull","Int2","Int4","Int8","Other","Real","SQLiteError","SQLitePoolError","SQLiteSource","SQLiteSourceError","SQLiteSourcePartition","SQLiteSourcePartitionParser","SQLiteTypeSystem","SQLiteUrlDecodeError","Text","Time","Timestamp","__clone_box","as_error_source","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","fetch_metadata","fetch_next","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","lift_into","lift_into","lift_into","lift_into","lift_into","names","ncols","new","new","new","nrows","parser","partition","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","produce","provide","result_rows","result_rows","schema","sculpt","sculpt","sculpt","sculpt","sculpt","set_data_order","set_origin_query","set_queries","source","subset","subset","subset","subset","subset","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","BigQueryArrow2Transport","BigQueryArrow2TransportError","BigQueryArrowTransport","BigQueryArrowTransportError","CSVArrowTransport","ConnectorX","ConnectorX","ConnectorX","ConnectorX","ConnectorX","ConnectorX","ConnectorX","ConnectorX","ConnectorX","ConnectorX","ConnectorX","ConnectorX","Destination","Destination","Destination","Destination","Destination","Destination","Destination","Destination","Destination","Destination","Destination","Destination","DummyArrow2Transport","DummyArrowTransport","MsSQLArrow2Transport","MsSQLArrow2TransportError","MsSQLArrowTransport","MsSQLArrowTransportError","MySQLArrow2Transport","MySQLArrow2TransportError","MySQLArrowTransport","MySQLArrowTransportError","OracleArrow2Transport","OracleArrow2TransportError","OracleArrowTransport","OracleArrowTransportError","PostgresArrow2Transport","PostgresArrow2TransportError","PostgresArrowTransport","PostgresArrowTransportError","SQLiteArrow2Transport","SQLiteArrow2TransportError","SQLiteArrowTransport","SQLiteArrowTransportError","Source","Source","Source","Source","Source","Source","Source","Source","Source","Source","Source","Source","as_error_source","as_error_source","as_error_source","as_error_source","as_error_source","as_error_source","as_error_source","as_error_source","as_error_source","as_error_source","as_error_source","as_error_source","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","convert_typesystem","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","process","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","processor","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","source","source","source","source","source","source","source","source","source","source","source","source","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","D","Error","S","TSD","TSS","Transport","TypeConversion","convert","convert_type","convert_typesystem","process","processor"],"q":[[0,"connectorx"],[17,"connectorx::arrow_batch_iter"],[43,"connectorx::constants"],[52,"connectorx::data_order"],[81,"connectorx::destinations"],[102,"connectorx::destinations::arrow"],[181,"connectorx::destinations::arrow2"],[258,"connectorx::destinations::arrow2::typesystem"],[310,"connectorx::destinations::arrow::typesystem"],[354,"connectorx::errors"],[506,"connectorx::fed_dispatcher"],[507,"connectorx::fed_rewriter"],[549,"connectorx::get_arrow"],[551,"connectorx::get_arrow2"],[552,"connectorx::partition"],[572,"connectorx::prelude"],[666,"connectorx::source_router"],[722,"connectorx::sources"],[759,"connectorx::sources::bigquery"],[932,"connectorx::sources::csv"],[1074,"connectorx::sources::dummy"],[1189,"connectorx::sources::mssql"],[1409,"connectorx::sources::mysql"],[1675,"connectorx::sources::oracle"],[1843,"connectorx::sources::postgres"],[2347,"connectorx::sources::sqlite"],[2498,"connectorx::transports"],[4055,"connectorx::typesystem"]],"d":["","","This module provides two data orders: row-wise and …","This module defines three traits <code>Destination</code>, …","","","","","","A macro to help define a Transport.","Associate physical representations to a typesystem.","","","","This module defines four traits <code>Source</code>, <code>SourcePartition</code>, …","This module contains transport definitions for the sources …","This module defines traits that required to define a …","The iterator that returns arrow in <code>RecordBatch</code>","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Given the supported data order from source and …","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","A type implemented <code>Consume&lt;T&gt;</code> means that it can consume a …","","A <code>Destination</code> is associated with a <code>TypeSystem</code> and a …","<code>PartitionDestination</code> writes values to its own region. …","","","","","","","Construct the <code>Destination</code>. This allocates the memory based …","Aquire n rows in final destination","Destination implementation for Arrow and Polars.","Destination implementation for Arrow2.","","Final clean ups","Number of rows this <code>PartitionDestination</code> controls.","Specify whether the destination needs total rows in advance","Create a bunch of partition destinations, with each write …","Return the schema of the destination.","Write a value of type T to the location (row, col). If T …","","","","","","","Any other errors that are too trivial to be put here …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Any other errors that are too trivial to be put here …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Errors that can be raised from this library.","","","","","","","","","","","","","","","","","","","","","","","","Any other errors that are too trivial to be put here …","","","","","","","","","","","","","","","","","","The required type does not same as the schema defined.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","A dispatcher takes a <code>S: Source</code>, a <code>D: Destination</code>, a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Only fetch the metadata (header) of the destination.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a new dispatcher by providing a source, a …","","","","","Start the data loading process.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Supported data orders, ordering by preference.","","","","","","","","A type implemented <code>Produce&lt;T&gt;</code> means that it can produce a …","","In general, a <code>DataSource</code> abstracts the data source as a …","The type system this <code>Source</code> associated with.","","","Source implementation for Google BigQuery","Source implementation for CSV files.","A dummy source that generates different values based on an …","","Fetch next batch of rows from database, return (number of …","Source implementation for SQL Server.","Source implementation for MySQL database.","","Number of cols this <code>DataSource</code> got.","Number of rows this <code>DataSource</code> got. Sometimes it is not …","","Read a value <code>T</code> by calling <code>Produce&lt;T&gt;::produce</code>. Usually …","","","Source implementation for Postgres database, including the …","","Get total number of rows if available","Count total number of rows in each partition.","","","","","Source implementation for SQLite embedded database.","","","","","","","","","","","","","","","","","","","","","","","","","Any other errors that are too trivial to be put here …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is a dummy type system used in this library. For all …","","","","","","Any other errors that are too trivial to be put here …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","The parameter <code>query</code> is the path of the csv file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is a dummy type system used in this library. For all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Any other errors that are too trivial to be put here …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Any other errors that are too trivial to be put here …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeny other errors that are too trivial to be put here …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Protocol - Binary based bulk load","","","","","","Protocol - CSV based bulk load","","","Protocol - use Cursor","","","","","","","","","","","","","","","","","","","","","Any other errors that are too trivial to be put here …","","","","","","","","","","","","Protocol - use Simple Query","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Any other errors that are too trivial to be put here …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert BigQuery data types to Arrow data types.","","Convert BigQuery data types to Arrow data types.","","Convert CSV data types to Arrow data types.","","","","","","","","","","","","","","","","","","","","","","","","","Convert Dummy data types to Arrow2 data types.","Convert Dummy data types to Arrow data types.","Convert MsSQL data types to Arrow2 data types.","","Convert MsSQL data types to Arrow data types.","","Convert MySQL data types to Arrow2 data types.","","Convert MySQL data types to Arrow data types.","","","","","","Convert Postgres data types to Arrow2 data types.","","Convert Postgres data types to Arrow data types.","","Convert SQLite data types to Arrow2 data types.","","Convert SQLite data types to Arrow data typeseturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</coderansport asks the source to produce a value, do type …","Defines a rule to convert a type <code>T</code> to a type <code>U</code>.","","convert_type convert the type T1 associated with the …","convert_typesystem convert the source type system TSS to …","<code>process</code> will ask source to produce a value with type T1, …",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,83,4,4,4,4,4,4,4,83,4,83,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,15,0,15,15,15,15,15,15,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,94,0,0,94,211,23,94,94,211,94,211,0,0,23,211,211,94,94,94,211,0,0,25,0,0,25,25,0,5,26,5,5,25,5,26,25,5,26,25,26,5,5,26,25,5,26,25,5,26,25,5,26,25,25,5,26,25,25,25,25,5,26,25,5,26,25,5,26,25,5,26,5,5,5,5,25,5,5,5,26,25,25,5,26,25,25,5,26,25,5,26,25,5,26,25,0,5,26,25,0,0,0,35,0,35,35,35,0,33,36,33,35,33,36,35,33,36,35,36,33,33,36,35,33,36,35,33,36,35,36,35,35,33,36,35,35,35,35,35,33,36,35,33,36,35,33,36,35,36,33,33,33,33,35,33,33,36,35,35,33,36,35,35,33,36,35,33,36,35,33,36,35,0,33,36,35,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,46,46,46,46,46,46,16,16,0,46,0,47,16,46,46,46,46,46,46,46,46,46,46,46,46,46,47,16,46,46,46,46,46,16,0,46,46,46,46,0,0,16,46,46,46,46,46,16,16,16,16,16,46,46,16,46,16,47,46,16,47,16,46,16,47,46,16,47,46,16,47,46,46,16,16,47,47,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,16,16,16,16,16,47,47,46,16,47,46,16,47,46,16,47,46,16,46,16,47,46,16,46,16,47,46,16,47,46,16,47,46,16,47,46,16,47,46,16,47,0,0,0,82,81,82,81,82,81,82,82,82,81,82,81,82,81,82,81,82,81,82,81,81,82,81,81,81,81,0,82,81,82,82,81,82,81,82,81,82,81,82,81,0,0,0,0,87,87,87,87,87,87,0,0,87,87,87,87,0,87,87,87,87,87,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,95,8,95,8,8,8,0,95,8,95,8,95,8,8,8,95,8,8,8,8,8,0,0,95,95,8,95,8,95,8,8,8,95,0,95,8,0,95,8,95,8,95,8,8,8,95,8,95,8,95,8,95,8,8,102,102,102,102,102,102,102,0,0,102,80,102,80,102,80,102,80,102,80,80,102,80,102,80,102,80,102,80,102,80,102,80,102,80,102,80,80,0,80,102,80,80,102,80,102,80,102,80,80,102,80,80,102,80,102,80,2,2,212,213,105,212,2,0,0,0,0,2,212,213,0,0,0,2,213,0,0,2,212,212,0,213,212,2,0,105,2,212,2,2,2,2,0,55,0,55,55,55,0,0,0,0,55,0,55,107,107,107,107,55,107,107,107,107,107,107,107,55,107,107,107,107,55,108,115,109,55,107,110,108,115,109,55,107,110,107,107,108,115,109,55,107,110,108,115,109,55,107,110,108,115,109,55,107,110,108,109,55,55,107,110,108,115,109,55,55,55,55,55,55,55,55,55,107,107,110,108,115,109,55,107,110,108,115,109,55,107,110,110,110,110,108,115,109,55,107,110,108,115,108,115,115,115,108,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,55,108,115,108,108,115,109,55,107,110,108,108,108,55,108,115,109,55,107,110,107,55,108,115,109,55,107,110,108,115,109,55,107,110,108,115,109,55,107,110,108,115,109,55,107,110,124,126,0,0,0,0,0,126,124,124,124,126,126,126,124,124,126,125,130,127,126,124,125,130,127,126,124,124,124,124,124,125,130,127,126,124,125,130,127,126,124,125,130,127,126,124,124,124,124,124,124,125,127,126,126,124,125,130,127,126,126,126,126,126,126,124,124,124,125,125,130,127,126,124,125,130,127,126,124,125,130,127,126,124,125,130,125,130,130,130,124,125,127,127,127,127,127,127,127,127,127,127,126,125,130,125,125,130,127,126,124,125,125,125,126,125,130,127,126,124,124,126,125,130,127,126,124,125,130,127,126,124,125,130,127,126,124,125,130,127,126,124,131,131,0,0,0,0,131,131,131,131,132,134,133,131,132,134,133,131,131,131,131,131,132,134,133,131,132,134,133,131,132,134,133,131,131,131,131,131,131,132,133,131,132,134,133,131,131,131,132,134,133,131,132,134,133,131,132,134,133,131,132,134,132,134,134,134,131,132,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,132,134,132,132,134,133,131,132,132,132,132,134,133,131,131,132,134,133,131,132,134,133,131,132,134,133,131,132,134,133,131,137,137,137,137,66,137,137,137,137,137,137,137,0,137,66,137,137,0,137,137,66,66,66,0,0,0,0,0,66,66,137,137,137,137,66,137,137,137,137,137,137,137,137,137,137,66,145,146,138,148,139,66,137,145,146,138,148,139,66,137,137,137,145,146,138,148,139,66,137,145,146,138,148,139,66,137,145,146,138,148,139,66,137,138,139,66,66,137,145,146,138,148,139,66,66,66,66,66,66,66,66,137,137,145,146,145,146,138,148,139,66,137,145,146,138,148,139,66,137,145,146,138,148,139,66,137,0,138,148,138,148,148,148,138,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,66,138,148,138,145,146,138,148,139,66,137,138,138,138,66,145,146,138,148,139,66,137,137,66,145,146,138,148,139,66,137,145,146,138,148,139,66,137,145,146,138,148,139,66,137,145,146,138,148,139,66,137,0,156,156,48,156,156,156,156,156,156,156,156,156,156,156,156,0,48,48,0,0,0,0,0,48,48,156,0,156,156,156,156,156,156,156,156,156,156,156,156,48,165,163,158,164,159,160,48,156,165,163,158,164,159,160,48,156,156,156,165,163,158,164,159,160,48,156,165,163,158,164,159,160,48,156,165,163,158,164,159,160,48,156,158,159,160,48,48,156,165,163,158,164,159,160,48,48,48,48,48,48,156,156,165,163,158,164,159,160,48,156,165,163,158,164,159,160,48,156,165,163,158,164,159,160,48,156,158,164,164,158,164,159,160,164,164,164,164,158,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,48,158,164,164,158,165,163,158,164,159,160,48,156,158,158,158,48,165,163,158,164,159,160,48,156,156,48,165,163,158,164,159,160,48,156,165,163,158,164,159,160,48,156,165,163,158,164,159,160,48,156,165,163,158,164,159,160,48,156,173,173,173,173,173,69,173,173,173,173,173,173,0,69,69,0,0,0,0,0,69,69,69,173,173,173,173,69,175,179,176,69,173,177,175,179,176,69,173,177,173,173,0,175,179,176,69,173,177,175,179,176,69,173,177,175,179,176,69,173,177,175,176,69,69,173,177,175,179,176,69,69,69,69,69,69,69,173,173,177,175,179,176,69,173,177,175,179,176,69,173,177,177,177,175,179,176,69,173,177,175,179,175,179,176,179,179,175,176,176,176,176,176,176,176,176,176,176,176,176,176,176,69,175,179,175,175,179,176,69,173,177,175,175,175,69,175,179,176,69,173,177,173,69,175,179,176,69,173,177,175,179,176,69,173,177,175,179,176,69,173,177,175,179,176,69,173,177,0,181,181,181,181,76,0,181,76,0,181,181,181,181,181,181,181,76,76,181,181,181,181,181,181,181,181,181,181,181,76,0,0,76,76,0,0,0,0,0,0,0,0,181,181,181,181,181,76,181,181,181,181,76,214,195,193,196,197,185,194,186,187,188,189,76,181,214,195,193,196,197,185,194,186,187,188,189,76,181,181,181,214,195,193,196,197,185,194,186,187,188,189,76,181,214,195,193,196,197,185,194,186,187,188,189,76,181,214,195,193,196,197,185,194,186,187,188,189,76,181,185,186,187,188,189,76,76,181,214,195,193,196,197,185,194,186,187,188,189,76,76,76,76,76,76,76,76,76,181,181,214,195,193,196,197,185,194,186,187,188,189,76,181,214,195,193,196,197,185,194,186,187,188,189,76,181,214,195,193,196,197,185,194,186,187,188,189,76,181,185,194,194,194,194,185,194,186,187,188,189,194,194,194,194,194,194,194,194,185,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,76,185,194,194,194,194,0,185,214,195,193,196,197,185,194,186,187,188,189,76,181,185,185,185,76,214,195,193,196,197,185,194,186,187,188,189,76,181,181,76,214,195,193,196,197,185,194,186,187,188,189,76,181,214,195,193,196,197,185,194,186,187,188,189,76,181,214,195,193,196,197,185,194,186,187,188,189,76,181,214,195,193,196,197,185,194,186,187,188,189,76,181,205,205,61,205,61,205,205,205,61,205,61,61,0,0,0,0,0,61,205,205,205,205,61,206,208,207,61,205,206,208,207,61,205,205,205,206,208,207,61,205,206,208,207,61,205,206,208,207,61,205,205,206,207,61,61,205,206,208,207,61,61,61,61,61,61,205,206,208,207,61,205,206,208,207,61,205,206,208,207,61,205,206,208,206,208,207,208,208,206,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,61,206,208,206,206,208,207,61,205,206,206,206,61,206,208,207,61,205,205,61,206,208,207,61,205,205,205,206,208,207,61,205,206,208,207,61,205,206,208,207,61,205,0,0,0,0,0,70,64,65,73,54,71,53,67,51,63,52,58,70,64,65,73,54,71,53,67,51,63,52,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,70,64,65,73,54,71,53,67,51,63,52,58,70,64,65,73,54,71,53,67,51,63,52,58,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,70,64,65,73,54,71,53,67,51,63,52,58,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,70,64,65,73,54,71,53,67,51,63,52,58,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,217,217,217,217,217,217,217,217,217,217,218,218,218,218,218,218,218,218,218,218,218,218,219,219,219,219,219,219,219,219,219,219,219,219,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,224,224,224,224,224,224,224,224,224,224,224,224,225,225,225,225,225,225,225,225,225,225,225,225,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,215,216,217,218,219,220,221,222,222,223,223,224,225,226,226,226,226,226,226,226,226,227,227,227,227,227,227,227,227,228,229,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,70,64,65,73,54,71,53,67,51,63,52,58,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,70,64,65,73,54,71,53,67,51,63,52,58,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,70,64,65,73,54,71,53,67,51,63,52,58,70,70,64,64,65,65,73,73,54,54,71,71,53,53,67,67,51,51,63,63,52,52,58,58,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,70,70,70,70,64,64,64,64,65,65,65,65,73,73,73,73,54,54,54,54,71,71,71,71,53,53,53,53,67,67,67,67,51,51,51,51,63,63,63,63,52,52,52,52,58,58,58,58,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,70,64,65,73,54,71,53,67,51,63,52,58,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,70,64,65,73,54,71,53,67,51,63,52,58,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,70,64,65,73,54,71,53,67,51,63,52,58,215,216,217,218,219,220,221,222,222,223,223,224,225,226,226,226,226,226,226,226,226,227,227,227,227,227,227,227,227,228,229,215,216,217,218,219,220,221,222,222,223,223,224,225,226,226,226,226,226,226,226,226,227,227,227,227,227,227,227,227,228,229,70,64,65,73,54,71,53,67,51,63,52,58,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,70,64,65,73,54,71,53,67,51,63,52,58,70,64,65,73,54,71,53,67,51,63,52,58,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,70,64,65,73,54,71,53,67,51,63,52,58,70,64,65,73,54,71,53,67,51,63,52,58,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,70,64,65,73,54,71,53,67,51,63,52,58,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,70,64,65,73,54,71,53,67,51,63,52,58,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,70,64,65,73,54,71,53,67,51,63,52,58,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,70,64,65,73,54,71,53,67,51,63,52,58,3,3,3,3,3,0,0,230,3,3,3,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1],[1],[1],[[]],[[]],[[[4,[2,3]]]],[[],1],[[]],[[]],[[]],[[2,5,[7,[6]],[9,[[8,[6]]]],1],[[10,[[4,[2,3]]]]]],[[[4,[2,3]]],7],[[],[[7,[11]]]],[[[4,[2,3]]],[[7,[11]]]],[[]],[[[4,[2,3]]]],[[]],[[],[[10,[12]]]],[[],10],[[],10],[[],13],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[14],[[]],[[]],[15,15],[[]],[[[9,[15]],[9,[15]]],[[10,[15,16]]]],[1],[1],[1],[[15,15],17],[[],17],[[],17],[[],17],[[],17],[[15,18],19],[[]],[[],1],[[]],[[]],[[]],[[],[[10,[12]]]],[[]],[[],10],[[],10],[[],13],[[]],0,0,0,0,0,0,0,0,0,0,[[1,[9,[[21,[20]]]],9,15],10],[1,[[10,[1]]]],0,0,[[],10],[[],10],[[],1],[[],17],[1,[[10,[22]]]],[[],9],0,0,0,0,0,0,0,0,0,[[5,1,[9,[[21,[20]]]],[9,[24]],15],[[10,[25]]]],[[26,1],[[10,[1,25]]]],[5,[[10,[[22,[11]],25]]]],[5,[[28,[27]]]],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[26,[0,[0,0]]],[[10,[25]]]],[[],5],[1],[1],[1],[1],[1],[1],[1],[1],[1],[5,11],[26,[[10,[25]]]],[[25,18],19],[[25,18],19],[[]],[[]],[16,25],[30,25],[[]],[31,25],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[9,[6]]]],[26,1],[5,17],[[],5],[1,5],[[5,1],[[10,[22,25]]]],[32],[5,[[10,[[7,[11]],25]]]],[5,[[9,[24]]]],[[]],[[]],[[]],[25,[[7,[29]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],13],[[],13],[[],13],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[33,1,[9,[[21,[20]]]],[9,[34]],15],[[10,[35]]]],[[36,1],[[10,[1,35]]]],[33,[[10,[35]]]],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[36,[0,[0,0]]],[[10,[35]]]],[[],33],[1],[1],[1],[1],[1],[1],[1],[1],[1],[36,[[10,[35]]]],[[35,18],19],[[35,18],19],[[]],[[]],[37,35],[31,35],[16,35],[[]],[38,35],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[36,1],[33,17],[[],33],[[33,1],[[10,[22,35]]]],[33,[[10,[39,35]]]],[32],[33,[[9,[34]]]],[[]],[[]],[[]],[35,[[7,[29]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],13],[[],13],[[],13],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14],[[]],[[]],[34,34],[[]],[[34,34],40],[[],40],[1],[1],[1],[[34,34],17],[[],17],[[],17],[[],17],[[],17],[[34,18],19],[[]],[[[0,[41,42]],43],44],[[34,45]],[[],1],[[]],[[]],[[34,34],[[7,[40]]]],[[]],[[],[[10,[12]]]],[[]],[[],10],[[],10],[[],13],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14],[[]],[[]],[24,24],[[]],[[24,24],40],[[],40],[1],[1],[1],[[24,24],17],[[],17],[[],17],[[],17],[[],17],[[24,18],19],[[]],[[[0,[41,42]],43],44],[[24,45]],[[],1],[[]],[[]],[[24,24],[[7,[40]]]],[[]],[[],[[10,[12]]]],[[]],[[],10],[[],10],[[],13],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],16],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[46,18],19],[[46,18],19],[[16,18],19],[[16,18],19],[[47,18],19],[[47,18],19],[48,46],[49,46],[16,46],[50,46],[51,46],[52,46],[53,46],[54,46],[55,46],[25,46],[56,46],[57,46],[58,46],[59,46],[60,46],[61,46],[62,46],[63,46],[64,46],[65,46],[66,46],[67,46],[[]],[68,46],[69,46],[70,46],[71,46],[72,46],[31,46],[73,46],[74,46],[35,46],[75,46],[76,46],[[]],[31,16],[77,16],[78,16],[74,16],[[[7,[6]]],47],[[]],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[32],[32],[[]],[[]],[[]],[46,[[7,[29]]]],[16,[[7,[29]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[6,[79,[6,6]],[7,[20]]],[[10,[[22,[11]],46]]]],0,0,[[]],[[]],[[]],[[]],0,0,0,0,[1],[1],[1],[1],[1],[1],[[]],[[]],[[],1],[[],1],[[]],[[]],0,[[]],[[]],0,[[80,17],81],[[[79,[6,[22,[6]]]],17],81],[[20,[79,[6,81]],[7,[20]]],[[10,[[22,[82]],46]]]],[[]],[[]],0,[[],[[10,[12]]]],[[],[[10,[12]]]],[[],10],[[],10],[[],10],[[],10],[[],13],[[],13],[[]],[[]],[[80,[7,[6]],[9,[[8,[6]]]]],[[10,[5,46]]]],[[80,[7,[6]],[9,[[8,[6]]]],1],[[84,[83]]]],[[80,[7,[6]],[9,[[8,[6]]]]],[[10,[33,46]]]],0,[[]],[[]],[1],[1],[1],[[]],[[80,20,20],85],[[80,20,20,86,86],[[10,[[8,[6]],46]]]],[[],1],[[]],[[]],[[20,20,[7,[86]],[7,[86]],1],87],[[87,80],[[85,[[22,[8]]]]]],[[]],[[],[[10,[12]]]],[[],10],[[],10],[[],13],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14],[[[8,[[21,[20]]]]],20],[88,[[10,[[90,[89]],56]]]],[[[8,[[21,[20]]]]],20],[[]],[[]],[[]],[[]],[[[8,[91]]],[[8,[91]]]],[[]],0,[1],[1],[1],[1],[1],[1],[[[8,[92]],18],19],[[[8,[93]],18],19],[[]],[20,[[8,[6]]]],[[]],[8,8],[6,8],[20,[[8,[6]]]],0,0,[[[95,[2,94,3]]],10],[[],1],[[],1],[[]],[[]],[[]],[[]],[[8,96],8],[[[21,[20]]],[[8,[6]]]],[[2,94,9,[7,[6]]],[[95,[2,94,3]]]],0,[[[95,[2,94,3]]],10],[[[8,[10]]],[[10,[8]]]],0,[[[95,[2,94,3]]],10],[[[98,[97]]],[[10,[[100,[99]],56]]]],[[]],[[]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[]],[[],6],[[],10],[[],10],[[],10],[[],10],[[],13],[[],13],[[]],[[]],[[],101],0,0,0,0,0,0,0,0,0,[14],[14],[[]],[[]],[[]],[[]],[102,102],[80,80],[[]],[[]],0,[1],[1],[1],[1],[1],[1],[[102,18],19],[[80,18],19],[[]],[[]],[[],1],[[],1],[[]],[[]],[[]],[[]],[[102,103,6],80],[[20,[7,[20]]],[[10,[80,16]]]],0,[[]],[[]],[[80,20]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[]],[[]],[[],10],[20,[[104,[80]]]],[[],10],[[],10],[[],10],0,[[],13],[[],13],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],10],[[],10],0,0,[[],[[22,[6]]]],[[],1],[[],1],0,[[[105,[0]]],[[10,[0]]]],[[],10],[[],[[10,[22]]]],0,[[],10],[[],[[10,[[7,[1]]]]]],[[],10],[[],22],[15,10],[[[7,[6]]]],[[[9,[[8,[106]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[107,107],[[]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[108,[[10,[55]]]],[109,[[10,[55]]]],[[55,18],19],[[55,18],19],[[107,18],19],[[110,18],19],[[]],[[]],[[]],[111,55],[[]],[31,55],[75,55],[112,55],[16,55],[68,55],[72,55],[74,55],[[]],[113,107],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[110,114],17],[[110,114],17],[[110,114],17],[[]],[[]],[[]],[[]],[[]],[[]],[108,[[22,[6]]]],[115,1],[[[28,[116]],20],[[10,[108,55]]]],[[[28,[116]],[28,[117]],6,[8,[6]],[9,[107]]],115],[115,1],[115,[[10,[55]]]],[108,[[10,[22,55]]]],[109,[[10,[[7,[6]],55]]]],[109,[[10,[[7,[118]],55]]]],[109,[[10,[[7,[86]],55]]]],[109,[[10,[6,55]]]],[109,[[10,[[7,[119]],55]]]],[109,[[10,[86,55]]]],[109,[[10,[[7,[120]],55]]]],[109,[[10,[[7,[121]],55]]]],[109,[[10,[121,55]]]],[109,[[10,[17,55]]]],[109,[[10,[[7,[17]],55]]]],[109,[[10,[[7,[[123,[122]]]],55]]]],[109,[[10,[[123,[122]],55]]]],[109,[[10,[118,55]]]],[109,[[10,[119,55]]]],[109,[[10,[120,55]]]],[32],[108,[[10,[[7,[1]],55]]]],[115,[[10,[55]]]],[108,22],[[]],[[]],[[]],[[]],[[]],[[]],[[108,15],[[10,[55]]]],[[108,[7,[6]]]],[[108,[9,[[8,[106]]]]]],[55,[[7,[29]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[]],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[124,124],[[]],[[124,124],40],[[],40],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[124,124],17],[[],17],[[],17],[[],17],[[],17],[125,[[10,[126]]]],[127,[[10,[126]]]],[[126,18],19],[[126,18],19],[[124,18],19],[[]],[[]],[[]],[[]],[128,126],[129,126],[74,126],[31,126],[16,126],[[]],[[[0,[41,42]],43],44],[[124,45]],[125,[[10,[[22,[124]],126]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[125,[[22,[6]]]],[130,1],[[[9,[124]]],125],[[[8,[6]]],[[10,[130,126]]]],[130,1],[130,[[10,[126]]]],[[124,124],[[7,[40]]]],[125,[[10,[22,126]]]],[127,[[10,[[7,[86]],126]]]],[127,[[10,[17,126]]]],[127,[[10,[[7,[6]],126]]]],[127,[[10,[6,126]]]],[127,[[10,[119,126]]]],[127,[[10,[[7,[17]],126]]]],[127,[[10,[[123,[122]],126]]]],[127,[[10,[[7,[[123,[122]]]],126]]]],[127,[[10,[[7,[119]],126]]]],[127,[[10,[86,126]]]],[32],[125,[[10,[[7,[1]],126]]]],[130,[[10,[126]]]],[125,22],[[]],[[]],[[]],[[]],[[]],[[125,15],[[10,[126]]]],[[125,[7,[6]]]],[[125,[9,[[8,[106]]]]]],[126,[[7,[29]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[]],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[131,131],[[]],[[131,131],40],[[],40],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[131,131],17],[[],17],[[],17],[[],17],[[],17],[132,104],[133,104],[[131,18],19],[[]],[[]],[[]],[[]],[[[0,[41,42]],43],44],[[131,45]],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[132,[[22,[6]]]],[134,1],[[[9,[[21,[20]]]],[9,[131]]],132],[[[9,[131]],[8,[6]]],134],[134,1],[134,104],[[131,131],[[7,[40]]]],[132,[[104,[22]]]],[133,[[104,[[7,[[123,[122]]]]]]]],[133,[[104,[135]]]],[133,[[104,[[123,[122]]]]]],[133,[[104,[[7,[86]]]]]],[133,[[104,[[7,[44]]]]]],[133,[[104,[[136,[122]]]]]],[133,[[104,[86]]]],[133,[[104,[[7,[6]]]]]],[133,[[104,[[7,[[136,[122]]]]]]]],[133,[[104,[119]]]],[133,[[104,[[7,[135]]]]]],[133,[[104,[[7,[119]]]]]],[133,[[104,[6]]]],[133,[[104,[17]]]],[133,[[104,[44]]]],[133,[[104,[[7,[17]]]]]],[132,[[104,[[7,[1]]]]]],[134,104],[132,22],[[]],[[]],[[]],[[]],[[132,15],[[10,[16]]]],[[132,[7,[6]]]],[[132,[9,[[8,[106]]]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[137,137],[[]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[138,[[10,[66]]]],[139,[[10,[66]]]],[[66,18],19],[[66,18],19],[[137,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[[141,[140]]],66],[140,66],[142,66],[49,66],[31,66],[68,66],[16,66],[143,137],[[]],[144,[[10,[[7,[145]],49]]]],[144,[[10,[[7,[146]],49]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[103,[[10,[147,66]]]],[138,[[22,[6]]]],[148,1],[[[28,[116]],20,1],[[10,[138,66]]]],[[[150,[149]],[28,[116]],[8,[6]],[9,[137]]],148],[148,1],[148,[[10,[66]]]],[138,[[10,[22,66]]]],[139,[[10,[[7,[86]],66]]]],[139,[[10,[[7,[145]],66]]]],[139,[[10,[151,66]]]],[139,[[10,[152,66]]]],[139,[[10,[119,66]]]],[139,[[10,[121,66]]]],[139,[[10,[[7,[118]],66]]]],[139,[[10,[[7,[153]],66]]]],[139,[[10,[[7,[17]],66]]]],[139,[[10,[[7,[[9,[154]]]],66]]]],[139,[[10,[145,66]]]],[139,[[10,[153,66]]]],[139,[[10,[[7,[121]],66]]]],[139,[[10,[20,66]]]],[139,[[10,[[7,[154]],66]]]],[139,[[10,[135,66]]]],[139,[[10,[[7,[[123,[122]]]],66]]]],[139,[[10,[[9,[154]],66]]]],[139,[[10,[154,66]]]],[139,[[10,[[7,[120]],66]]]],[139,[[10,[[7,[119]],66]]]],[139,[[10,[[123,[122]],66]]]],[139,[[10,[120,66]]]],[139,[[10,[[7,[20]],66]]]],[139,[[10,[17,66]]]],[139,[[10,[118,66]]]],[139,[[10,[146,66]]]],[139,[[10,[[7,[155]],66]]]],[139,[[10,[86,66]]]],[139,[[10,[[7,[135]],66]]]],[139,[[10,[[7,[151]],66]]]],[139,[[10,[[7,[146]],66]]]],[139,[[10,[155,66]]]],[139,[[10,[[7,[152]],66]]]],[32],[138,[[10,[[7,[1]],66]]]],[148,[[10,[66]]]],[138,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[138,15],[[10,[66]]]],[[138,[7,[6]]]],[[138,[9,[[8,[106]]]]]],[66,[[7,[29]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[]],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[156,156],[[]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[[158,[157]]],[[10,[48]]]],[159,[[10,[48]]]],[160,[[10,[48]]]],[[48,18],19],[[48,18],19],[[156,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[161,48],[[]],[16,48],[56,48],[31,48],[162,48],[[],156],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[158,[157]]],[[22,[6]]]],[[[164,[163]]],1],[[[164,[165]]],1],[[20,1],[[10,[158,48]]]],[[[167,[166]],[8,[6]],[9,[156]]],164],[[[100,[168]],[9,[156]]],159],[[[100,[99]],[9,[156]]],160],[[[164,[165]]],1],[[[164,[163]]],1],[[[164,[165]]],[[10,[48]]]],[[[164,[163]]],[[10,[48]]]],[[[158,[157]]],[[10,[22,48]]]],[159,[[10,[169,48]]]],[159,[[10,[151,48]]]],[159,[[10,[[7,[86]],48]]]],[159,[[10,[6,48]]]],[159,[[10,[44,48]]]],[159,[[10,[[7,[120]],48]]]],[159,[[10,[120,48]]]],[159,[[10,[155,48]]]],[159,[[10,[170,48]]]],[159,[[10,[171,48]]]],[159,[[10,[121,48]]]],[159,[[10,[[7,[170]],48]]]],[159,[[10,[[7,[[22,[154]]]],48]]]],[159,[[10,[[7,[169]],48]]]],[159,[[10,[119,48]]]],[159,[[10,[[7,[152]],48]]]],[159,[[10,[[7,[154]],48]]]],[159,[[10,[152,48]]]],[159,[[10,[[22,[154]],48]]]],[159,[[10,[[7,[121]],48]]]],[159,[[10,[172,48]]]],[159,[[10,[[7,[151]],48]]]],[159,[[10,[[7,[172]],48]]]],[159,[[10,[[7,[135]],48]]]],[159,[[10,[[7,[6]],48]]]],[159,[[10,[135,48]]]],[159,[[10,[[7,[119]],48]]]],[159,[[10,[154,48]]]],[159,[[10,[[7,[44]],48]]]],[159,[[10,[86,48]]]],[159,[[10,[[7,[155]],48]]]],[159,[[10,[[7,[171]],48]]]],[159,[[10,[[7,[118]],48]]]],[159,[[10,[118,48]]]],[160,[[10,[120,48]]]],[160,[[10,[[7,[118]],48]]]],[160,[[10,[121,48]]]],[160,[[10,[[7,[154]],48]]]],[160,[[10,[[7,[6]],48]]]],[160,[[10,[44,48]]]],[160,[[10,[172,48]]]],[160,[[10,[[7,[170]],48]]]],[160,[[10,[[7,[152]],48]]]],[160,[[10,[86,48]]]],[160,[[10,[[7,[171]],48]]]],[160,[[10,[[7,[120]],48]]]],[160,[[10,[171,48]]]],[160,[[10,[170,48]]]],[160,[[10,[[22,[154]],48]]]],[160,[[10,[[7,[119]],48]]]],[160,[[10,[[7,[151]],48]]]],[160,[[10,[[7,[121]],48]]]],[160,[[10,[[7,[155]],48]]]],[160,[[10,[[7,[135]],48]]]],[160,[[10,[[7,[172]],48]]]],[160,[[10,[[7,[86]],48]]]],[160,[[10,[155,48]]]],[160,[[10,[152,48]]]],[160,[[10,[135,48]]]],[160,[[10,[118,48]]]],[160,[[10,[[7,[[22,[154]]]],48]]]],[160,[[10,[154,48]]]],[160,[[10,[151,48]]]],[160,[[10,[6,48]]]],[160,[[10,[[7,[44]],48]]]],[160,[[10,[[7,[169]],48]]]],[160,[[10,[169,48]]]],[160,[[10,[119,48]]]],[32],[[[158,[157]]],[[10,[[7,[1]],48]]]],[[[164,[165]]],[[10,[48]]]],[[[164,[163]]],[[10,[48]]]],[[[158,[157]]],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[158,[157]],15],[[10,[48]]]],[[[158,[157]],[7,[6]]]],[[[158,[157]],[9,[[8,[106]]]]]],[48,[[7,[29]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[]],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[173,173],[[]],[103,[[10,[174,69]]]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[175,[[10,[69]]]],[176,[[10,[69]]]],[[69,18],19],[[69,18],19],[[173,18],19],[[177,18],19],[[]],[[]],[[]],[59,69],[142,69],[31,69],[16,69],[[]],[161,69],[68,69],[178,173],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[177,114],17],[[177,114],17],[[]],[[]],[[]],[[]],[[]],[[]],[175,[[22,[6]]]],[179,1],[[20,1],[[10,[175,69]]]],[[[167,[180]],[8,[6]],[9,[173]]],179],[[[167,[180]],20,[9,[173]]],[[10,[176,69]]]],[179,1],[179,[[10,[69]]]],[175,[[10,[22,69]]]],[176,[[10,[119,69]]]],[176,[[10,[[7,[119]],69]]]],[176,[[10,[86,69]]]],[176,[[10,[[22,[154]],69]]]],[176,[[10,[[7,[[22,[154]]]],69]]]],[176,[[10,[[7,[[123,[122]]]],69]]]],[176,[[10,[6,69]]]],[176,[[10,[[7,[118]],69]]]],[176,[[10,[120,69]]]],[176,[[10,[[123,[122]],69]]]],[176,[[10,[[7,[6]],69]]]],[176,[[10,[118,69]]]],[176,[[10,[[7,[120]],69]]]],[176,[[10,[[7,[86]],69]]]],[32],[175,[[10,[[7,[1]],69]]]],[179,[[10,[69]]]],[175,22],[[]],[[]],[[]],[[]],[[]],[[]],[[175,15],[[10,[69]]]],[[175,[7,[6]]]],[[175,[9,[[8,[106]]]]]],[69,[[7,[29]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[]],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[181,181],[[]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[[185,[157,[0,[[183,[182]],91,184,157]]]]],[[10,[76]]]],[186,[[10,[76]]]],[187,[[10,[76]]]],[188,[[10,[76]]]],[189,[[10,[76]]]],[[76,18],19],[[76,18],19],[[181,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[190,76],[16,76],[31,76],[129,76],[60,76],[[]],[161,76],[74,76],[191,76],[[]],[192,181],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[185,[157,[0,[[183,[182]],91,184,157]]]]],[[22,[6]]]],[[[194,[193,[0,[[183,[182]],91,184,157]]]]],1],[[[194,[195,[0,[[183,[182]],91,184,157]]]]],1],[[[194,[196,[0,[[183,[182]],91,184,157]]]]],1],[[[194,[197,[0,[[183,[182]],91,184,157]]]]],1],[[198,[0,[[183,[182]],91,184,157]],1],[[10,[[185,[[0,[[183,[182]],91,184,157]]]],76]]]],[[[167,[[199,[[0,[[183,[182]],91,184,157]]]]]],[8,[6]],[9,[181]],[9,[192]]],[[194,[[0,[[183,[182]],91,184,157]]]]]],[[200,[9,[181]]],186],[[[202,[201]],[9,[181]]],187],[[203,[9,[181]]],188],[[[22,[204]],[9,[181]]],189],[[[194,[193,[0,[[183,[182]],91,184,157]]]]],1],[[[194,[197,[0,[[183,[182]],91,184,157]]]]],1],[[[194,[196,[0,[[183,[182]],91,184,157]]]]],1],[[[194,[195,[0,[[183,[182]],91,184,157]]]]],1],[[[194,[195,[0,[[183,[182]],91,184,157]]]]],[[10,[76]]]],[[[194,[197,[0,[[183,[182]],91,184,157]]]]],[[10,[76]]]],[[[194,[193,[0,[[183,[182]],91,184,157]]]]],[[10,[76]]]],[[[194,[196,[0,[[183,[182]],91,184,157]]]]],[[10,[76]]]],[[[185,[157,[0,[[183,[182]],91,184,157]]]]],[[10,[22,76]]]],[186,[[10,[171,76]]]],[186,[[10,[[7,[119]],76]]]],[186,[[10,[[7,[[22,[155]]]],76]]]],[186,[[10,[[22,[17]],76]]]],[186,[[10,[121,76]]]],[186,[[10,[[7,[171]],76]]]],[186,[[10,[[7,[[22,[17]]]],76]]]],[186,[[10,[[7,[[22,[152]]]],76]]]],[186,[[10,[[22,[119]],76]]]],[186,[[10,[[7,[[22,[119]]]],76]]]],[186,[[10,[151,76]]]],[186,[[10,[[7,[151]],76]]]],[186,[[10,[[7,[17]],76]]]],[186,[[10,[135,76]]]],[186,[[10,[[7,[[22,[135]]]],76]]]],[186,[[10,[[7,[155]],76]]]],[186,[[10,[[7,[[22,[154]]]],76]]]],[186,[[10,[20,76]]]],[186,[[10,[118,76]]]],[186,[[10,[[79,[6,[7,[6]]]],76]]]],[186,[[10,[153,76]]]],[186,[[10,[[7,[120]],76]]]],[186,[[10,[[7,[170]],76]]]],[186,[[10,[[7,[[22,[151]]]],76]]]],[186,[[10,[[7,[[22,[6]]]],76]]]],[186,[[10,[86,76]]]],[186,[[10,[120,76]]]],[186,[[10,[17,76]]]],[186,[[10,[[22,[135]],76]]]],[186,[[10,[[22,[86]],76]]]],[186,[[10,[[7,[[79,[6,[7,[6]]]]]],76]]]],[186,[[10,[[7,[86]],76]]]],[186,[[10,[[7,[121]],76]]]],[186,[[10,[119,76]]]],[186,[[10,[[7,[[123,[122]]]],76]]]],[186,[[10,[[22,[151]],76]]]],[186,[[10,[155,76]]]],[186,[[10,[[22,[154]],76]]]],[186,[[10,[[7,[153]],76]]]],[186,[[10,[[22,[152]],76]]]],[186,[[10,[[7,[[22,[86]]]],76]]]],[186,[[10,[[7,[135]],76]]]],[186,[[10,[[123,[122]],76]]]],[186,[[10,[[22,[6]],76]]]],[186,[[10,[170,76]]]],[186,[[10,[[7,[152]],76]]]],[186,[[10,[[7,[118]],76]]]],[186,[[10,[152,76]]]],[186,[[10,[[7,[20]],76]]]],[186,[[10,[[22,[155]],76]]]],[187,[[10,[[7,[[22,[135]]]],76]]]],[187,[[10,[[7,[[123,[122]]]],76]]]],[187,[[10,[[7,[[22,[154]]]],76]]]],[187,[[10,[[22,[154]],76]]]],[187,[[10,[[7,[119]],76]]]],[187,[[10,[[7,[17]],76]]]],[187,[[10,[170,76]]]],[187,[[10,[[22,[135]],76]]]],[187,[[10,[[22,[6]],76]]]],[187,[[10,[[22,[151]],76]]]],[187,[[10,[[7,[170]],76]]]],[187,[[10,[[22,[152]],76]]]],[187,[[10,[171,76]]]],[187,[[10,[17,76]]]],[187,[[10,[[123,[122]],76]]]],[187,[[10,[[7,[171]],76]]]],[187,[[10,[[7,[120]],76]]]],[187,[[10,[[7,[[22,[171]]]],76]]]],[187,[[10,[[7,[[22,[17]]]],76]]]],[187,[[10,[[7,[151]],76]]]],[187,[[10,[[7,[118]],76]]]],[187,[[10,[120,76]]]],[187,[[10,[151,76]]]],[187,[[10,[[7,[86]],76]]]],[187,[[10,[[22,[171]],76]]]],[187,[[10,[[7,[[22,[152]]]],76]]]],[187,[[10,[119,76]]]],[187,[[10,[[7,[[22,[155]]]],76]]]],[187,[[10,[[7,[20]],76]]]],[187,[[10,[[22,[86]],76]]]],[187,[[10,[[7,[121]],76]]]],[187,[[10,[[22,[155]],76]]]],[187,[[10,[[22,[17]],76]]]],[187,[[10,[20,76]]]],[187,[[10,[[7,[155]],76]]]],[187,[[10,[[7,[[22,[151]]]],76]]]],[187,[[10,[[7,[[79,[6,[7,[6]]]]]],76]]]],[187,[[10,[[22,[119]],76]]]],[187,[[10,[118,76]]]],[187,[[10,[135,76]]]],[187,[[10,[152,76]]]],[187,[[10,[[7,[153]],76]]]],[187,[[10,[121,76]]]],[187,[[10,[[7,[[22,[6]]]],76]]]],[187,[[10,[[7,[152]],76]]]],[187,[[10,[[79,[6,[7,[6]]]],76]]]],[187,[[10,[153,76]]]],[187,[[10,[86,76]]]],[187,[[10,[155,76]]]],[187,[[10,[[7,[[22,[86]]]],76]]]],[187,[[10,[[7,[135]],76]]]],[187,[[10,[[7,[[22,[119]]]],76]]]],[188,[[10,[[7,[170]],76]]]],[188,[[10,[155,76]]]],[188,[[10,[[22,[154]],76]]]],[188,[[10,[20,76]]]],[188,[[10,[135,76]]]],[188,[[10,[[7,[[22,[119]]]],76]]]],[188,[[10,[170,76]]]],[188,[[10,[[22,[155]],76]]]],[188,[[10,[[7,[135]],76]]]],[188,[[10,[[79,[6,[7,[6]]]],76]]]],[188,[[10,[[7,[151]],76]]]],[188,[[10,[120,76]]]],[188,[[10,[[7,[152]],76]]]],[188,[[10,[[22,[86]],76]]]],[188,[[10,[[7,[155]],76]]]],[188,[[10,[[7,[17]],76]]]],[188,[[10,[86,76]]]],[188,[[10,[[7,[86]],76]]]],[188,[[10,[[7,[[22,[17]]]],76]]]],[188,[[10,[151,76]]]],[188,[[10,[[22,[135]],76]]]],[188,[[10,[[7,[[79,[6,[7,[6]]]]]],76]]]],[188,[[10,[[7,[[22,[6]]]],76]]]],[188,[[10,[[7,[120]],76]]]],[188,[[10,[[22,[6]],76]]]],[188,[[10,[[7,[119]],76]]]],[188,[[10,[153,76]]]],[188,[[10,[[7,[[22,[155]]]],76]]]],[188,[[10,[[123,[122]],76]]]],[188,[[10,[[7,[20]],76]]]],[188,[[10,[152,76]]]],[188,[[10,[[7,[121]],76]]]],[188,[[10,[[22,[119]],76]]]],[188,[[10,[[22,[151]],76]]]],[188,[[10,[[7,[153]],76]]]],[188,[[10,[[7,[[22,[152]]]],76]]]],[188,[[10,[[22,[17]],76]]]],[188,[[10,[[7,[[22,[86]]]],76]]]],[188,[[10,[171,76]]]],[188,[[10,[[7,[118]],76]]]],[188,[[10,[118,76]]]],[188,[[10,[[7,[[22,[154]]]],76]]]],[188,[[10,[[7,[[123,[122]]]],76]]]],[188,[[10,[[7,[171]],76]]]],[188,[[10,[[7,[[22,[135]]]],76]]]],[188,[[10,[121,76]]]],[188,[[10,[[22,[152]],76]]]],[188,[[10,[17,76]]]],[188,[[10,[[7,[[22,[151]]]],76]]]],[188,[[10,[119,76]]]],[189,[[10,[[123,[122]],76]]]],[189,[[10,[[7,[[22,[151]]]],76]]]],[189,[[10,[155,76]]]],[189,[[10,[[7,[[123,[122]]]],76]]]],[189,[[10,[[7,[20]],76]]]],[189,[[10,[121,76]]]],[189,[[10,[[7,[[22,[155]]]],76]]]],[189,[[10,[17,76]]]],[189,[[10,[151,76]]]],[189,[[10,[119,76]]]],[189,[[10,[[7,[120]],76]]]],[189,[[10,[[22,[17]],76]]]],[189,[[10,[[7,[119]],76]]]],[189,[[10,[[7,[[22,[6]]]],76]]]],[189,[[10,[[7,[[22,[154]]]],76]]]],[189,[[10,[[7,[135]],76]]]],[189,[[10,[[7,[[22,[86]]]],76]]]],[189,[[10,[153,76]]]],[189,[[10,[[7,[151]],76]]]],[189,[[10,[[7,[153]],76]]]],[189,[[10,[[22,[154]],76]]]],[189,[[10,[[7,[121]],76]]]],[189,[[10,[171,76]]]],[189,[[10,[170,76]]]],[189,[[10,[20,76]]]],[189,[[10,[135,76]]]],[189,[[10,[[22,[119]],76]]]],[189,[[10,[[7,[[22,[119]]]],76]]]],[189,[[10,[[22,[135]],76]]]],[189,[[10,[[7,[118]],76]]]],[189,[[10,[[7,[[22,[152]]]],76]]]],[189,[[10,[[7,[152]],76]]]],[189,[[10,[[79,[6,[7,[6]]]],76]]]],[189,[[10,[[22,[152]],76]]]],[189,[[10,[[7,[17]],76]]]],[189,[[10,[[22,[86]],76]]]],[189,[[10,[[7,[[22,[17]]]],76]]]],[189,[[10,[[22,[155]],76]]]],[189,[[10,[[7,[171]],76]]]],[189,[[10,[[7,[155]],76]]]],[189,[[10,[118,76]]]],[189,[[10,[[7,[86]],76]]]],[189,[[10,[[7,[[79,[6,[7,[6]]]]]],76]]]],[189,[[10,[[7,[170]],76]]]],[189,[[10,[[22,[6]],76]]]],[189,[[10,[[7,[[22,[135]]]],76]]]],[189,[[10,[152,76]]]],[189,[[10,[86,76]]]],[189,[[10,[120,76]]]],[189,[[10,[[22,[151]],76]]]],[32],[[[185,[157,[0,[[183,[182]],91,184,157]]]]],[[10,[[7,[1]],76]]]],[[[194,[196,[0,[[183,[182]],91,184,157]]]]],[[10,[76]]]],[[[194,[193,[0,[[183,[182]],91,184,157]]]]],[[10,[76]]]],[[[194,[195,[0,[[183,[182]],91,184,157]]]]],[[10,[76]]]],[[[194,[197,[0,[[183,[182]],91,184,157]]]]],[[10,[76]]]],[103,[[10,[76]]]],[[[185,[157,[0,[[183,[182]],91,184,157]]]]],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[185,[157,[0,[[183,[182]],91,184,157]]]],15],[[10,[76]]]],[[[185,[157,[0,[[183,[182]],91,184,157]]]],[7,[6]]]],[[[185,[157,[0,[[183,[182]],91,184,157]]]],[9,[[8,[106]]]]]],[76,[[7,[29]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[]],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[205,205],[[]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[205,205],17],[206,[[10,[61]]]],[207,[[10,[61]]]],[[61,18],19],[[61,18],19],[[205,18],19],[[]],[[]],[[]],[161,61],[[]],[31,61],[142,61],[62,61],[16,61],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[206,[[22,[6]]]],[208,1],[[20,1],[[10,[206,61]]]],[[[167,[209]],[8,[6]],[9,[205]]],208],[[[167,[209]],20,[9,[205]]],[[10,[207,61]]]],[208,1],[208,[[10,[61]]]],[206,[[10,[22,61]]]],[207,[[10,[135,61]]]],[207,[[10,[86,61]]]],[207,[[10,[[22,[154]],61]]]],[207,[[10,[120,61]]]],[207,[[10,[17,61]]]],[207,[[10,[[7,[[84,[20]]]],61]]]],[207,[[10,[[7,[120]],61]]]],[207,[[10,[[7,[86]],61]]]],[207,[[10,[[84,[20]],61]]]],[207,[[10,[[7,[17]],61]]]],[207,[[10,[[7,[121]],61]]]],[207,[[10,[[7,[118]],61]]]],[207,[[10,[[7,[155]],61]]]],[207,[[10,[[7,[135]],61]]]],[207,[[10,[119,61]]]],[207,[[10,[155,61]]]],[207,[[10,[121,61]]]],[207,[[10,[[7,[119]],61]]]],[207,[[10,[[7,[[22,[154]]]],61]]]],[207,[[10,[118,61]]]],[32],[206,[[10,[[7,[1]],61]]]],[208,[[10,[61]]]],[206,22],[[]],[[]],[[]],[[]],[[]],[[206,15],[[10,[61]]]],[[206,[7,[6]]]],[[206,[9,[[8,[106]]]]]],[61,[[7,[29]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[]],[[],6],[[],10],[[],10],[[],10],[[],10],[210,[[10,[205,61]]]],[[],10],[[],[[10,[205,61]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[121,121],[86,86],[17,17],[[[123,[122]]],[[123,[122]]]],[[[7,[17]]],[[7,[17]]]],[118,118],[[[7,[118]]],[[7,[118]]]],[[[7,[6]]],[[7,[6]]]],[[[7,[120]]],[[7,[120]]]],[120,120],[119,119],[6,6],[[[7,[86]]],[[7,[86]]]],[[[7,[119]]],[[7,[119]]]],[[[7,[121]]],[[7,[121]]]],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[7,[86]]],[[7,[86]]]],[[[7,[6]]],[[7,[6]]]],[[[7,[120]]],[[7,[120]]]],[[[123,[122]]],[[123,[122]]]],[118,118],[86,86],[17,17],[[[7,[121]]],[[7,[121]]]],[[[7,[17]]],[[7,[17]]]],[121,121],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[7,[118]]],[[7,[118]]]],[6,6],[119,119],[[[7,[119]]],[[7,[119]]]],[120,120],[6,6],[17,17],[[[123,[122]]],[[123,[122]]]],[86,86],[[[7,[17]]],[[7,[17]]]],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[7,[119]]],[[7,[119]]]],[[[7,[6]]],[[7,[6]]]],[119,119],[[[7,[86]]],[[7,[86]]]],[[[7,[119]]],[[7,[119]]]],[17,17],[[[123,[122]]],118],[6,6],[[[7,[86]]],[[7,[86]]]],[[[7,[17]]],[[7,[17]]]],[[[7,[[123,[122]]]]],[[7,[118]]]],[86,86],[118,[[123,[122]]]],[119,119],[120,[[123,[122]]]],[[[7,[6]]],[[7,[6]]]],[[[7,[[123,[122]]]]],[[7,[118]]]],[86,86],[17,17],[118,[[123,[122]]]],[[[7,[119]]],[[7,[119]]]],[[[7,[17]]],[[7,[17]]]],[[[7,[86]]],[[7,[86]]]],[[[123,[122]]],118],[120,[[123,[122]]]],[119,119],[6,6],[[[7,[6]]],[[7,[6]]]],[154,86],[[[7,[151]]],[[7,[151]]]],[[[7,[120]]],[[7,[120]]]],[135,86],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[7,[119]]],[[7,[119]]]],[118,118],[[[7,[154]]],[[7,[86]]]],[121,121],[20,6],[86,86],[[[7,[146]]],[[7,[119]]]],[[[7,[17]]],[[7,[17]]]],[[[9,[154]]],[[22,[154]]]],[155,86],[153,6],[120,120],[[[7,[152]]],[[7,[119]]]],[17,17],[151,151],[146,119],[[[7,[20]]],[[7,[6]]]],[[[7,[153]]],[[7,[6]]]],[152,119],[[[7,[[9,[154]]]]],[[7,[[22,[154]]]]]],[[[7,[118]]],[[7,[118]]]],[[[7,[121]]],[[7,[121]]]],[145,86],[[[123,[122]]],[[123,[122]]]],[[[7,[86]]],[[7,[86]]]],[[[7,[155]]],[[7,[86]]]],[[[7,[145]]],[[7,[86]]]],[[[7,[135]]],[[7,[86]]]],[119,119],[146,119],[152,119],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[7,[146]]],[[7,[119]]]],[[[7,[119]]],[[7,[119]]]],[120,120],[155,135],[121,121],[[[7,[17]]],[[7,[17]]]],[[[7,[155]]],[[7,[135]]]],[[[7,[154]]],[[7,[135]]]],[[[7,[118]]],[[7,[118]]]],[17,17],[[[7,[151]]],[[7,[151]]]],[[[123,[122]]],[[123,[122]]]],[119,119],[151,151],[86,86],[[[7,[152]]],[[7,[119]]]],[[[7,[120]]],[[7,[120]]]],[20,6],[[[9,[154]]],[[22,[154]]]],[[[7,[153]]],[[7,[6]]]],[[[7,[145]]],[[7,[86]]]],[[[7,[86]]],[[7,[86]]]],[118,118],[[[7,[[9,[154]]]]],[[7,[[22,[154]]]]]],[[[7,[20]]],[[7,[6]]]],[154,135],[145,86],[[[7,[121]]],[[7,[121]]]],[[[7,[135]]],[[7,[135]]]],[153,6],[135,135],[86,86],[121,121],[[[7,[170]]],[[7,[6]]]],[172,86],[[[7,[171]]],[[7,[17]]]],[121,121],[44,119],[118,118],[[[7,[121]]],[[7,[121]]]],[86,86],[169,86],[119,119],[[[7,[44]]],[[7,[119]]]],[[[7,[44]]],[[7,[119]]]],[172,86],[154,86],[[[7,[169]]],[[7,[86]]]],[171,17],[[[7,[155]]],[[7,[86]]]],[[[7,[151]]],[[7,[119]]]],[152,119],[[[7,[86]]],[[7,[86]]]],[[[22,[154]]],[[22,[154]]]],[[[7,[154]]],[[7,[86]]]],[[[7,[152]]],[[7,[119]]]],[[[7,[169]]],[[7,[86]]]],[[[7,[154]]],[[7,[86]]]],[[[7,[170]]],[[7,[6]]]],[155,86],[[[7,[121]]],[[7,[121]]]],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[[[7,[152]]],[[7,[119]]]],[135,86],[[[7,[155]]],[[7,[86]]]],[[[7,[120]]],[[7,[120]]]],[[[22,[154]]],[[22,[154]]]],[[[7,[6]]],[[7,[6]]]],[170,6],[155,86],[6,6],[44,119],[[[7,[6]]],[[7,[6]]]],[[[7,[172]]],[[7,[86]]]],[[[7,[119]]],[[7,[119]]]],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[151,119],[154,86],[[[7,[171]]],[[7,[17]]]],[[[7,[151]]],[[7,[119]]]],[120,120],[169,86],[[[7,[118]]],[[7,[118]]]],[151,119],[[[7,[172]]],[[7,[86]]]],[[[7,[135]]],[[7,[86]]]],[118,118],[[[7,[119]]],[[7,[119]]]],[[[7,[120]]],[[7,[120]]]],[120,120],[6,6],[119,119],[135,86],[[[7,[118]]],[[7,[118]]]],[[[7,[86]]],[[7,[86]]]],[[[7,[135]]],[[7,[86]]]],[[[7,[172]]],[[7,[86]]]],[120,120],[[[7,[119]]],[[7,[119]]]],[[[7,[135]]],[[7,[86]]]],[[[7,[171]]],[[7,[86]]]],[154,86],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[[[7,[154]]],[[7,[86]]]],[[[7,[44]]],[[7,[119]]]],[[[7,[154]]],[[7,[86]]]],[152,119],[121,121],[[[22,[154]]],[[22,[154]]]],[[[22,[154]]],[[22,[154]]]],[172,86],[118,118],[86,86],[[[7,[170]]],[[7,[6]]]],[[[7,[121]]],[[7,[121]]]],[119,119],[169,86],[[[7,[118]]],[[7,[118]]]],[[[7,[151]]],[[7,[119]]]],[[[7,[6]]],[[7,[6]]]],[135,86],[120,120],[[[7,[44]]],[[7,[119]]]],[154,86],[6,6],[[[7,[169]]],[[7,[86]]]],[[[7,[155]]],[[7,[86]]]],[155,86],[[[7,[170]]],[[7,[6]]]],[170,6],[119,119],[[[7,[151]]],[[7,[119]]]],[44,119],[121,121],[171,86],[135,86],[[[7,[121]]],[[7,[121]]]],[86,86],[[[7,[86]]],[[7,[86]]]],[[[7,[118]]],[[7,[118]]]],[6,6],[[[7,[6]]],[[7,[6]]]],[151,119],[169,86],[[[7,[120]]],[[7,[120]]]],[172,86],[[[7,[171]]],[[7,[86]]]],[118,118],[[[7,[169]]],[[7,[86]]]],[[[7,[135]]],[[7,[86]]]],[151,119],[[[7,[152]]],[[7,[119]]]],[[[7,[119]]],[[7,[119]]]],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[[[7,[172]]],[[7,[86]]]],[[[7,[152]]],[[7,[119]]]],[171,86],[44,119],[[[7,[155]]],[[7,[86]]]],[[[7,[120]]],[[7,[120]]]],[155,86],[[[7,[86]]],[[7,[86]]]],[[[22,[154]]],[[22,[154]]]],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[7,[6]]],[[7,[6]]]],[119,119],[6,6],[[[7,[86]]],[[7,[86]]]],[118,118],[86,86],[[[7,[119]]],[[7,[119]]]],[[[7,[118]]],[[7,[118]]]],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[[[123,[122]]],[[123,[122]]]],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[7,[118]]],[[7,[118]]]],[[[22,[154]]],[[22,[154]]]],[[[7,[6]]],[[7,[6]]]],[[[123,[122]]],[[123,[122]]]],[[[7,[86]]],[[7,[86]]]],[[[7,[119]]],[[7,[119]]]],[118,118],[119,119],[6,6],[86,86],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[20,6],[86,86],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[123,[122]]],[[123,[122]]]],[120,120],[121,121],[118,118],[[[123,[122]]],[[123,[122]]]],[120,120],[[[7,[86]]],[[7,[86]]]],[135,86],[[[22,[154]]],[[22,[154]]]],[[[7,[17]]],[[7,[17]]]],[119,119],[[[7,[86]]],[[7,[86]]]],[[[7,[120]]],[[7,[120]]]],[[[7,[120]]],[[7,[120]]]],[135,86],[17,17],[17,17],[119,119],[[[22,[154]]],[[22,[154]]]],[[[7,[170]]],[[7,[6]]]],[[[7,[86]]],[[7,[86]]]],[[[7,[135]]],[[7,[86]]]],[120,120],[[[7,[153]]],[[7,[6]]]],[[[7,[20]]],[[7,[6]]]],[[[7,[118]]],[[7,[118]]]],[[[22,[154]]],[[22,[154]]]],[[[7,[170]]],[[7,[6]]]],[151,119],[119,119],[121,121],[[[7,[135]]],[[7,[86]]]],[120,120],[[[123,[122]]],[[123,[122]]]],[[[7,[152]]],[[7,[119]]]],[[[7,[86]]],[[7,[86]]]],[[[7,[17]]],[[7,[17]]]],[155,86],[[[7,[119]]],[[7,[119]]]],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[7,[121]]],[[7,[121]]]],[[[7,[118]]],[[7,[118]]]],[[[7,[151]]],[[7,[119]]]],[[[123,[122]]],[[123,[122]]]],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[7,[20]]],[[7,[6]]]],[[[7,[135]]],[[7,[86]]]],[135,86],[151,119],[[[7,[153]]],[[7,[6]]]],[[[7,[155]]],[[7,[86]]]],[17,17],[[[7,[153]]],[[7,[6]]]],[86,86],[[[7,[119]]],[[7,[119]]]],[[[7,[20]]],[[7,[6]]]],[[[7,[119]]],[[7,[119]]]],[[[7,[121]]],[[7,[121]]]],[[[7,[86]]],[[7,[86]]]],[[[7,[120]]],[[7,[120]]]],[[[7,[86]]],[[7,[86]]]],[155,86],[[[7,[135]]],[[7,[86]]]],[[[7,[118]]],[[7,[118]]]],[[[7,[152]]],[[7,[119]]]],[[[7,[170]]],[[7,[6]]]],[119,119],[[[7,[119]]],[[7,[119]]]],[[[7,[152]]],[[7,[119]]]],[17,17],[[[7,[170]]],[[7,[6]]]],[[[7,[153]]],[[7,[6]]]],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[121,121],[155,86],[86,86],[[[7,[20]]],[[7,[6]]]],[155,86],[[[7,[20]]],[[7,[6]]]],[86,86],[155,86],[[[7,[120]]],[[7,[120]]]],[[[7,[151]]],[[7,[119]]]],[17,17],[[[7,[155]]],[[7,[86]]]],[153,6],[[[7,[120]]],[[7,[120]]]],[[[7,[20]]],[[7,[6]]]],[[[7,[119]]],[[7,[119]]]],[[[7,[151]]],[[7,[119]]]],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[7,[155]]],[[7,[86]]]],[86,86],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[170,6],[118,118],[151,119],[86,86],[[[22,[154]]],[[22,[154]]]],[121,121],[20,6],[119,119],[[[7,[118]]],[[7,[118]]]],[[[7,[151]]],[[7,[119]]]],[[[7,[155]]],[[7,[86]]]],[[[7,[120]]],[[7,[120]]]],[20,6],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[[[123,[122]]],[[123,[122]]]],[155,86],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[[[7,[86]]],[[7,[86]]]],[155,86],[121,121],[[[7,[17]]],[[7,[17]]]],[[[7,[151]]],[[7,[119]]]],[20,6],[[[7,[170]]],[[7,[6]]]],[[[7,[135]]],[[7,[86]]]],[[[7,[121]]],[[7,[121]]]],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[7,[170]]],[[7,[6]]]],[[[7,[17]]],[[7,[17]]]],[[[123,[122]]],[[123,[122]]]],[[[7,[121]]],[[7,[121]]]],[[[7,[17]]],[[7,[17]]]],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[151,119],[135,86],[[[7,[151]]],[[7,[119]]]],[[[7,[155]]],[[7,[86]]]],[151,119],[120,120],[[[7,[153]]],[[7,[6]]]],[20,6],[120,120],[[[22,[154]]],[[22,[154]]]],[[[7,[135]]],[[7,[86]]]],[17,17],[135,86],[86,86],[[[22,[154]]],[[22,[154]]]],[118,118],[151,119],[[[7,[118]]],[[7,[118]]]],[151,119],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[118,118],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[[[7,[121]]],[[7,[121]]]],[20,6],[20,6],[120,120],[[[7,[118]]],[[7,[118]]]],[17,17],[[[7,[155]]],[[7,[86]]]],[[[7,[155]]],[[7,[86]]]],[[[7,[152]]],[[7,[119]]]],[118,118],[[[7,[151]]],[[7,[119]]]],[135,86],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[[[7,[20]]],[[7,[6]]]],[[[7,[153]]],[[7,[6]]]],[86,86],[121,121],[118,118],[119,119],[[[7,[121]]],[[7,[121]]]],[[[7,[120]]],[[7,[120]]]],[[[123,[122]]],[[123,[122]]]],[[[7,[152]]],[[7,[119]]]],[[[7,[153]]],[[7,[6]]]],[118,118],[[[7,[152]]],[[7,[119]]]],[119,119],[135,86],[[[7,[17]]],[[7,[17]]]],[[[7,[135]]],[[7,[86]]]],[[[22,[154]]],[[22,[154]]]],[120,120],[[[7,[119]]],[[7,[119]]]],[[[7,[121]]],[[7,[121]]]],[[[7,[119]]],[[7,[119]]]],[121,121],[[[7,[153]]],[[7,[6]]]],[[[123,[122]]],[[123,[122]]]],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[7,[152]]],[[7,[119]]]],[[[7,[86]]],[[7,[86]]]],[119,119],[[[7,[135]]],[[7,[86]]]],[[[7,[170]]],[[7,[6]]]],[[[7,[118]]],[[7,[118]]]],[[[7,[155]]],[[7,[86]]]],[[[7,[20]]],[[7,[6]]]],[152,119],[[[7,[119]]],[[7,[119]]]],[[[7,[151]]],[[7,[119]]]],[[[7,[17]]],[[7,[17]]]],[[[7,[120]]],[[7,[120]]]],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[155,86],[151,119],[[[7,[170]]],[[7,[6]]]],[118,118],[20,6],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[17,17],[135,86],[[[7,[152]]],[[7,[119]]]],[[[7,[17]]],[[7,[17]]]],[[[7,[118]]],[[7,[118]]]],[[[7,[121]]],[[7,[121]]]],[121,121],[[[22,[154]]],[[22,[154]]]],[[[7,[155]]],[[7,[135]]]],[[[7,[121]]],[[7,[121]]]],[[[7,[155]]],[[7,[135]]]],[[[22,[154]]],[[22,[154]]]],[[[7,[[22,[155]]]]],[[7,[[22,[86]]]]]],[20,6],[[[7,[121]]],[[7,[121]]]],[[[22,[6]]],[[22,[6]]]],[86,86],[[[7,[119]]],[[7,[119]]]],[151,151],[[[7,[153]]],[[7,[6]]]],[[[7,[[22,[151]]]]],[[7,[[22,[119]]]]]],[[[7,[86]]],[[7,[86]]]],[[[7,[[22,[152]]]]],[[7,[[22,[119]]]]]],[[[22,[17]]],[[22,[17]]]],[20,6],[20,6],[[[7,[[22,[151]]]]],[[7,[[22,[119]]]]]],[[[22,[119]]],[[22,[119]]]],[[[7,[[22,[152]]]]],[[7,[[22,[119]]]]]],[[[7,[[22,[155]]]]],[[7,[[22,[86]]]]]],[[[22,[17]]],[[22,[17]]]],[[[123,[122]]],[[123,[122]]]],[[[7,[151]]],[[7,[151]]]],[[[7,[153]]],[[7,[6]]]],[[[22,[17]]],[[22,[17]]]],[[[7,[170]]],[[7,[6]]]],[[[7,[135]]],[[7,[135]]]],[[[22,[151]]],[[22,[119]]]],[[[7,[[22,[6]]]]],[[7,[[22,[6]]]]]],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[121,121],[[[22,[151]]],[[22,[119]]]],[[[22,[17]]],[[22,[17]]]],[[[7,[[22,[86]]]]],[[7,[[22,[86]]]]]],[[[22,[135]]],[[22,[86]]]],[[[7,[121]]],[[7,[121]]]],[[[22,[119]]],[[22,[119]]]],[[[22,[119]]],[[22,[119]]]],[[[22,[155]]],[[22,[86]]]],[[[7,[[22,[119]]]]],[[7,[[22,[119]]]]]],[[[22,[154]]],[[22,[154]]]],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[[[7,[[22,[86]]]]],[[7,[[22,[86]]]]]],[[[123,[122]]],[[123,[122]]]],[[[22,[86]]],[[22,[86]]]],[[[7,[17]]],[[7,[17]]]],[17,17],[121,121],[[[22,[17]]],[[22,[17]]]],[[[7,[155]]],[[7,[135]]]],[[[7,[86]]],[[7,[86]]]],[17,17],[[[7,[153]]],[[7,[6]]]],[[[7,[135]]],[[7,[135]]]],[[[7,[[22,[135]]]]],[[7,[[22,[86]]]]]],[118,118],[[[22,[154]]],[[22,[154]]]],[[[7,[[22,[86]]]]],[[7,[[22,[86]]]]]],[[[22,[86]]],[[22,[86]]]],[121,121],[17,17],[[[7,[[22,[151]]]]],[[7,[[22,[119]]]]]],[155,135],[[[7,[121]]],[[7,[121]]]],[[[22,[154]]],[[22,[154]]]],[151,151],[[[7,[118]]],[[7,[118]]]],[[[7,[86]]],[[7,[86]]]],[[[22,[6]]],[[22,[6]]]],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[[[7,[[22,[151]]]]],[[7,[[22,[119]]]]]],[151,151],[[[7,[[22,[17]]]]],[[7,[[22,[17]]]]]],[[[7,[135]]],[[7,[135]]]],[[[7,[153]]],[[7,[6]]]],[[[7,[[22,[6]]]]],[[7,[[22,[6]]]]]],[20,6],[[[7,[170]]],[[7,[6]]]],[[[7,[[22,[17]]]]],[[7,[[22,[17]]]]]],[[[7,[[22,[151]]]]],[[7,[[22,[119]]]]]],[[[7,[152]]],[[7,[119]]]],[[[7,[[22,[6]]]]],[[7,[[22,[6]]]]]],[[[22,[151]]],[[22,[119]]]],[[[123,[122]]],[[123,[122]]]],[118,118],[119,119],[[[7,[118]]],[[7,[118]]]],[[[7,[121]]],[[7,[121]]]],[[[7,[119]]],[[7,[119]]]],[155,135],[119,119],[20,6],[[[22,[135]]],[[22,[86]]]],[86,86],[[[7,[20]]],[[7,[6]]]],[120,120],[151,151],[[[22,[119]]],[[22,[119]]]],[121,121],[[[7,[135]]],[[7,[135]]]],[[[7,[152]]],[[7,[119]]]],[[[7,[20]]],[[7,[6]]]],[86,86],[[[7,[20]]],[[7,[6]]]],[[[22,[6]]],[[22,[6]]]],[[[123,[122]]],[[123,[122]]]],[[[7,[120]]],[[7,[120]]]],[155,135],[[[7,[[22,[135]]]]],[[7,[[22,[86]]]]]],[[[7,[170]]],[[7,[6]]]],[[[7,[170]]],[[7,[6]]]],[17,17],[119,119],[[[7,[170]]],[[7,[6]]]],[[[7,[[22,[151]]]]],[[7,[[22,[119]]]]]],[[[7,[[22,[119]]]]],[[7,[[22,[119]]]]]],[[[22,[6]]],[[22,[6]]]],[135,135],[[[22,[152]]],[[22,[119]]]],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[[[22,[155]]],[[22,[86]]]],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[[[22,[135]]],[[22,[86]]]],[[[7,[118]]],[[7,[118]]]],[[[7,[[22,[119]]]]],[[7,[[22,[119]]]]]],[[[7,[152]]],[[7,[119]]]],[[[7,[[22,[17]]]]],[[7,[[22,[17]]]]]],[[[7,[155]]],[[7,[135]]]],[[[7,[[22,[152]]]]],[[7,[[22,[119]]]]]],[[[7,[170]]],[[7,[6]]]],[[[22,[154]]],[[22,[154]]]],[[[7,[86]]],[[7,[86]]]],[[[22,[151]]],[[22,[119]]]],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[7,[170]]],[[7,[6]]]],[151,151],[[[7,[[22,[155]]]]],[[7,[[22,[86]]]]]],[[[7,[[22,[155]]]]],[[7,[[22,[86]]]]]],[[[22,[155]]],[[22,[86]]]],[[[7,[86]]],[[7,[86]]]],[[[7,[153]]],[[7,[6]]]],[118,118],[120,120],[152,119],[[[7,[120]]],[[7,[120]]]],[151,151],[[[7,[119]]],[[7,[119]]]],[20,6],[86,86],[[[7,[155]]],[[7,[135]]]],[[[7,[20]]],[[7,[6]]]],[[[22,[135]]],[[22,[86]]]],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[7,[[22,[135]]]]],[[7,[[22,[86]]]]]],[[[22,[154]]],[[22,[154]]]],[[[7,[[22,[6]]]]],[[7,[[22,[6]]]]]],[[[22,[135]]],[[22,[86]]]],[[[7,[120]]],[[7,[120]]]],[[[7,[[22,[17]]]]],[[7,[[22,[17]]]]]],[[[7,[[22,[151]]]]],[[7,[[22,[119]]]]]],[119,119],[119,119],[17,17],[[[7,[[22,[119]]]]],[[7,[[22,[119]]]]]],[[[7,[120]]],[[7,[120]]]],[[[22,[151]]],[[22,[119]]]],[[[7,[121]]],[[7,[121]]]],[[[7,[152]]],[[7,[119]]]],[86,86],[[[7,[118]]],[[7,[118]]]],[[[7,[[22,[119]]]]],[[7,[[22,[119]]]]]],[[[123,[122]]],[[123,[122]]]],[120,120],[[[7,[[22,[17]]]]],[[7,[[22,[17]]]]]],[[[7,[[22,[135]]]]],[[7,[[22,[86]]]]]],[[[22,[119]]],[[22,[119]]]],[[[7,[[22,[152]]]]],[[7,[[22,[119]]]]]],[155,135],[118,118],[135,135],[[[7,[17]]],[[7,[17]]]],[155,135],[120,120],[[[7,[151]]],[[7,[151]]]],[[[22,[151]]],[[22,[119]]]],[[[7,[155]]],[[7,[135]]]],[118,118],[[[7,[151]]],[[7,[151]]]],[17,17],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[7,[17]]],[[7,[17]]]],[121,121],[[[22,[155]]],[[22,[86]]]],[135,135],[17,17],[119,119],[[[22,[6]]],[[22,[6]]]],[[[7,[170]]],[[7,[6]]]],[170,6],[[[7,[17]]],[[7,[17]]]],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[22,[86]]],[[22,[86]]]],[[[22,[135]]],[[22,[86]]]],[155,135],[[[7,[[22,[86]]]]],[[7,[[22,[86]]]]]],[[[7,[[22,[152]]]]],[[7,[[22,[119]]]]]],[[[22,[119]]],[[22,[119]]]],[[[22,[86]]],[[22,[86]]]],[[[7,[17]]],[[7,[17]]]],[[[7,[[22,[6]]]]],[[7,[[22,[6]]]]]],[[[22,[155]]],[[22,[86]]]],[[[22,[119]]],[[22,[119]]]],[[[22,[155]]],[[22,[86]]]],[[[7,[135]]],[[7,[135]]]],[135,135],[120,120],[[[7,[[22,[135]]]]],[[7,[[22,[86]]]]]],[20,6],[[[22,[17]]],[[22,[17]]]],[[[7,[[22,[152]]]]],[[7,[[22,[119]]]]]],[[[7,[[22,[135]]]]],[[7,[[22,[86]]]]]],[[[7,[118]]],[[7,[118]]]],[[[7,[152]]],[[7,[119]]]],[[[7,[[22,[155]]]]],[[7,[[22,[86]]]]]],[[[7,[[22,[86]]]]],[[7,[[22,[86]]]]]],[[[7,[[22,[86]]]]],[[7,[[22,[86]]]]]],[[[7,[151]]],[[7,[151]]]],[155,135],[135,135],[[[22,[17]]],[[22,[17]]]],[[[7,[[22,[86]]]]],[[7,[[22,[86]]]]]],[[[22,[155]]],[[22,[86]]]],[118,118],[[[7,[[22,[17]]]]],[[7,[[22,[17]]]]]],[[[7,[20]]],[[7,[6]]]],[[[7,[[22,[86]]]]],[[7,[[22,[86]]]]]],[[[7,[153]]],[[7,[6]]]],[[[7,[118]]],[[7,[118]]]],[[[7,[[22,[155]]]]],[[7,[[22,[86]]]]]],[[[22,[135]]],[[22,[86]]]],[[[22,[6]]],[[22,[6]]]],[[[7,[155]]],[[7,[135]]]],[[[22,[6]]],[[22,[6]]]],[[[7,[[22,[6]]]]],[[7,[[22,[6]]]]]],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[120,120],[[[22,[119]]],[[22,[119]]]],[151,151],[[[7,[151]]],[[7,[151]]]],[[[22,[154]]],[[22,[154]]]],[[[7,[86]]],[[7,[86]]]],[151,151],[120,120],[[[22,[86]]],[[22,[86]]]],[[[7,[120]]],[[7,[120]]]],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[135,135],[[[7,[[22,[135]]]]],[[7,[[22,[86]]]]]],[[[7,[135]]],[[7,[135]]]],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[[[7,[86]]],[[7,[86]]]],[[[7,[[22,[135]]]]],[[7,[[22,[86]]]]]],[135,135],[118,118],[[[22,[17]]],[[22,[17]]]],[[[7,[[22,[17]]]]],[[7,[[22,[17]]]]]],[[[7,[118]]],[[7,[118]]]],[[[7,[153]]],[[7,[6]]]],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[7,[[22,[119]]]]],[[7,[[22,[119]]]]]],[[[22,[86]]],[[22,[86]]]],[[[22,[155]]],[[22,[86]]]],[[[7,[119]]],[[7,[119]]]],[[[7,[152]]],[[7,[119]]]],[[[7,[135]]],[[7,[135]]]],[[[7,[155]]],[[7,[135]]]],[121,121],[[[7,[119]]],[[7,[119]]]],[[[7,[20]]],[[7,[6]]]],[119,119],[[[7,[[22,[155]]]]],[[7,[[22,[86]]]]]],[[[7,[[22,[119]]]]],[[7,[[22,[119]]]]]],[[[7,[[22,[6]]]]],[[7,[[22,[6]]]]]],[[[123,[122]]],[[123,[122]]]],[[[7,[153]]],[[7,[6]]]],[119,119],[[[22,[135]]],[[22,[86]]]],[[[7,[[22,[151]]]]],[[7,[[22,[119]]]]]],[120,120],[[[22,[151]]],[[22,[119]]]],[[[7,[[22,[6]]]]],[[7,[[22,[6]]]]]],[[[123,[122]]],[[123,[122]]]],[[[7,[151]]],[[7,[151]]]],[153,6],[[[7,[119]]],[[7,[119]]]],[86,86],[86,86],[121,121],[[[7,[120]]],[[7,[120]]]],[17,17],[121,121],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[[[22,[86]]],[[22,[86]]]],[[[7,[[22,[152]]]]],[[7,[[22,[119]]]]]],[[[7,[152]]],[[7,[119]]]],[[[22,[154]]],[[22,[154]]]],[[[123,[122]]],[[123,[122]]]],[[[22,[151]]],[[22,[119]]]],[118,118],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[[[22,[6]]],[[22,[6]]]],[[[7,[20]]],[[7,[6]]]],[[[7,[17]]],[[7,[17]]]],[20,6],[[[22,[86]]],[[22,[86]]]],[155,135],[[[7,[121]]],[[7,[121]]]],[[[7,[[22,[17]]]]],[[7,[[22,[17]]]]]],[[[7,[20]]],[[7,[6]]]],[[[7,[[22,[119]]]]],[[7,[[22,[119]]]]]],[[[7,[120]]],[[7,[120]]]],[[[7,[120]]],[[7,[120]]]],[[[7,[[123,[122]]]]],[[7,[[123,[122]]]]]],[86,86],[[[7,[118]]],[[7,[118]]]],[[[7,[17]]],[[7,[17]]]],[[[7,[151]]],[[7,[151]]]],[[[7,[152]]],[[7,[119]]]],[[[7,[[22,[155]]]]],[[7,[[22,[86]]]]]],[[[7,[119]]],[[7,[119]]]],[[[7,[[22,[152]]]]],[[7,[[22,[119]]]]]],[135,135],[[[7,[119]]],[[7,[119]]]],[[[7,[151]]],[[7,[151]]]],[[[7,[86]]],[[7,[86]]]],[[[7,[17]]],[[7,[17]]]],[[[7,[135]]],[[7,[135]]]],[[[7,[121]]],[[7,[121]]]],[155,86],[[[7,[86]]],[[7,[86]]]],[121,121],[120,120],[[[7,[118]]],[[7,[118]]]],[[[22,[154]]],[[22,[154]]]],[[[7,[121]]],[[7,[121]]]],[[[7,[120]]],[[7,[120]]]],[[[7,[119]]],[[7,[119]]]],[17,17],[[[84,[20]]],6],[[[7,[155]]],[[7,[86]]]],[[[7,[[84,[20]]]]],[[7,[6]]]],[[[7,[135]]],[[7,[86]]]],[119,119],[118,118],[[[7,[17]]],[[7,[17]]]],[135,86],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[86,86],[17,17],[135,86],[[[84,[20]]],6],[[[7,[121]]],[[7,[121]]]],[[[7,[[22,[154]]]]],[[7,[[22,[154]]]]]],[120,120],[121,121],[[[22,[154]]],[[22,[154]]]],[[[7,[86]]],[[7,[86]]]],[[[7,[17]]],[[7,[17]]]],[[[7,[118]]],[[7,[118]]]],[155,86],[[[7,[119]]],[[7,[119]]]],[119,119],[[[7,[120]]],[[7,[120]]]],[86,86],[118,118],[[[7,[[84,[20]]]]],[[7,[6]]]],[[[7,[155]]],[[7,[86]]]],[[[7,[135]]],[[7,[86]]]],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[70,18],19],[[70,18],19],[[64,18],19],[[64,18],19],[[65,18],19],[[65,18],19],[[73,18],19],[[73,18],19],[[54,18],19],[[54,18],19],[[71,18],19],[[71,18],19],[[53,18],19],[[53,18],19],[[67,18],19],[[67,18],19],[[51,18],19],[[51,18],19],[[63,18],19],[[63,18],19],[[52,18],19],[[52,18],19],[[58,18],19],[[58,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,70],[16,70],[55,70],[[]],[55,64],[16,64],[35,64],[66,65],[25,65],[16,65],[[]],[16,73],[35,73],[[]],[66,73],[[]],[25,54],[48,54],[16,54],[48,71],[[]],[16,71],[35,71],[[]],[16,53],[25,53],[69,53],[69,67],[[]],[35,67],[16,67],[16,51],[[]],[25,51],[76,51],[[]],[35,63],[76,63],[16,63],[[]],[16,52],[61,52],[25,52],[35,58],[[]],[16,58],[61,58],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[[],104],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[70,[[7,[29]]]],[64,[[7,[29]]]],[65,[[7,[29]]]],[73,[[7,[29]]]],[54,[[7,[29]]]],[71,[[7,[29]]]],[53,[[7,[29]]]],[67,[[7,[29]]]],[51,[[7,[29]]]],[63,[[7,[29]]]],[52,[[7,[29]]]],[58,[[7,[29]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],[[10,[12]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[],104],[[],10],[[],104]],"c":[],"p":[[15,"usize"],[8,"Source"],[8,"Transport"],[3,"ArrowBatchIter"],[3,"ArrowDestination"],[3,"String"],[4,"Option"],[4,"CXQuery"],[15,"slice"],[4,"Result"],[3,"RecordBatch"],[4,"CNil"],[3,"TypeId"],[3,"Private"],[4,"DataOrder"],[4,"ConnectorXError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[8,"AsRef"],[3,"Vec"],[8,"Consume"],[4,"ArrowTypeSystem"],[4,"ArrowDestinationError"],[3,"ArrowPartitionWriter"],[3,"Schema"],[3,"Arc"],[8,"Error"],[4,"ArrowError"],[3,"Error"],[3,"Demand"],[3,"Arrow2Destination"],[4,"Arrow2TypeSystem"],[4,"Arrow2DestinationError"],[3,"ArrowPartitionWriter"],[4,"PolarsError"],[4,"Error"],[3,"DataFrame"],[4,"Ordering"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[4,"ConnectorXOutError"],[4,"ProduceContext"],[4,"MySQLSourceError"],[4,"Error"],[4,"DataFusionError"],[4,"PostgresArrowTransportError"],[4,"SQLiteArrowTransportError"],[4,"OracleArrowTransportError"],[4,"MySQLArrowTransportError"],[4,"BigQuerySourceError"],[4,"Error"],[4,"J4RsError"],[4,"SQLiteArrow2TransportError"],[4,"Error"],[3,"Error"],[4,"SQLiteSourceError"],[4,"Error"],[4,"PostgresArrow2TransportError"],[4,"BigQueryArrow2TransportError"],[4,"MsSQLArrowTransportError"],[4,"MsSQLSourceError"],[4,"OracleArrow2TransportError"],[4,"ParseError"],[4,"OracleSourceError"],[4,"BigQueryArrowTransportError"],[4,"MySQLArrow2TransportError"],[4,"BQError"],[4,"MsSQLArrow2TransportError"],[3,"Error"],[3,"Error"],[4,"PostgresSourceError"],[4,"ParserError"],[4,"VarError"],[3,"HashMap"],[3,"SourceConn"],[3,"FederatedDataSourceInfo"],[3,"Plan"],[8,"RecordBatchIterator"],[3,"Box"],[6,"OutResult"],[15,"i64"],[3,"PartitionQuery"],[8,"Queryable"],[3,"Statement"],[4,"Cow"],[8,"Clone"],[8,"Display"],[8,"Debug"],[8,"Destination"],[3,"Dispatcher"],[8,"Fn"],[4,"ConnMut"],[8,"TryInto"],[3,"Text"],[3,"QueryResult"],[3,"QueryWithParams"],[4,"SourceType"],[3,"Url"],[6,"Result"],[8,"Produce"],[8,"ToString"],[4,"BigQueryTypeSystem"],[3,"BigQuerySource"],[3,"BigQuerySourceParser"],[3,"BigQueryDialect"],[3,"ParseIntError"],[3,"ParseFloatError"],[4,"FieldType"],[15,"char"],[3,"BigQuerySourcePartition"],[3,"Runtime"],[3,"Client"],[3,"NaiveDateTime"],[15,"f64"],[3,"NaiveDate"],[3,"NaiveTime"],[3,"Utc"],[3,"DateTime"],[4,"CSVTypeSystem"],[3,"CSVSource"],[4,"CSVSourceError"],[3,"CSVSourcePartitionParser"],[4,"Error"],[3,"Error"],[3,"CSVSourcePartition"],[4,"DummyTypeSystem"],[3,"DummySource"],[3,"DummySourcePartitionParser"],[3,"DummySourcePartition"],[15,"i32"],[3,"Date"],[4,"MsSQLTypeSystem"],[3,"MsSQLSource"],[3,"MsSQLSourceParser"],[4,"Error"],[4,"RunError"],[3,"FromUtf8Error"],[4,"ColumnType"],[4,"ColumnData"],[3,"IntN"],[3,"FloatN"],[3,"Config"],[3,"MsSQLSourcePartition"],[3,"ConnectionManager"],[3,"Pool"],[15,"f32"],[3,"Decimal"],[3,"Uuid"],[15,"u8"],[15,"i16"],[4,"MySQLTypeSystem"],[8,"Send"],[3,"MySQLSource"],[3,"MySQLBinarySourceParser"],[3,"MySQLTextSourceParser"],[3,"Error"],[4,"UrlError"],[4,"TextProtocol"],[3,"MySQLSourcePartition"],[4,"BinaryProtocol"],[3,"MySqlConnectionManager"],[3,"PooledConnection"],[3,"Binary"],[15,"u32"],[4,"Value"],[15,"i8"],[15,"u16"],[4,"OracleTypeSystem"],[3,"Connector"],[3,"OracleSource"],[3,"OracleTextSourceParser"],[3,"OracleDialect"],[4,"OracleType"],[3,"OracleSourcePartition"],[3,"OracleConnectionManager"],[4,"PostgresTypeSystem"],[3,"Socket"],[8,"MakeTlsConnect"],[8,"Sync"],[3,"PostgresSource"],[3,"PostgresBinarySourcePartitionParser"],[3,"PostgresCSVSourceParser"],[3,"PostgresRawSourceParser"],[3,"PostgresSimpleSourceParser"],[4,"FromHexError"],[3,"ErrorStack"],[3,"Type"],[4,"CSVProtocol"],[3,"PostgresSourcePartition"],[4,"BinaryProtocol"],[4,"CursorProtocol"],[4,"SimpleProtocol"],[3,"Config"],[3,"PostgresConnectionManager"],[3,"BinaryCopyOutIter"],[3,"CopyOutReader"],[3,"StringRecordsIntoIter"],[3,"RowIter"],[4,"SimpleQueryMessage"],[4,"SQLiteTypeSystem"],[3,"SQLiteSource"],[3,"SQLiteSourcePartitionParser"],[3,"SQLiteSourcePartition"],[3,"SqliteConnectionManager"],[4,"Type"],[8,"DestinationPartition"],[8,"SourcePartition"],[8,"PartitionParser"],[3,"PostgresTypePairs"],[3,"BigQueryArrowTransport"],[3,"BigQueryArrow2Transport"],[3,"CSVArrowTransport"],[3,"DummyArrowTransport"],[3,"DummyArrow2Transport"],[3,"MsSQLArrowTransport"],[3,"MsSQLArrow2Transport"],[3,"MySQLArrowTransport"],[3,"MySQLArrow2Transport"],[3,"OracleArrowTransport"],[3,"OracleArrow2Transport"],[3,"PostgresArrowTransport"],[3,"PostgresArrow2Transport"],[3,"SQLiteArrowTransport"],[3,"SQLiteArrow2Transport"],[8,"TypeConversion"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
